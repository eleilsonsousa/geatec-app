{"version":3,"sources":["webpack:///src/app/pages/cadastro/produto/produto-cad/produto-cad.page.html","webpack:///src/app/entity/Produto.ts","webpack:///src/app/pages/cadastro/produto/produto-cad/produto-cad-routing.module.ts","webpack:///src/app/pages/cadastro/produto/produto-cad/produto-cad.module.ts","webpack:///src/app/pages/cadastro/produto/produto-cad/produto-cad.page.ts"],"names":["Produto","categoria","unidade","nome_length","observacao_length","precoCompra_length","precoVenda_length","unidade_length","categoria_length","routes","path","component","ProdutoCadPageRoutingModule","imports","forChild","exports","ProdutoCadPageModule","declarations","ProdutoCadPage","listUnidades","listCategorias","createFormFields","getUnidades","hideLoading","initForm","showFocus","isAlterCad","entity","form","nome","required","precoCompra","precoVenda","observacao","console","log","validForm","showLoading","produtoController","salvarOuAlterar","subscribe","data","id","messageController","showMessageToast","messages","dialogs_register_save","navigatePostParams","entityIndex","setTimeout","inputNome","setFocus","o1","o2","unidadeController","buscarTodos","result","sigla","forEach","element","selector","template"],"mappings":"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","file":"pages-cadastro-produto-produto-cad-produto-cad-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>{{messages.produto_cad_title}}</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"submitForm()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n            </ion-button>\\n\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.produto_cad_field_label_nome}}</ion-label>\\n                    <ion-input formControlName=\\\"nome\\\" #inputNome [attr.maxLength]=\\\"entity.nome_length\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div *ngIf=\\\"isSubmitted && errorControl.nome.errors?.required\\\" class=\\\"error-message\\\">\\n                    {{ messages.field_required }}\\n                </div>\\n\\n            </ion-col>\\n\\n        </ion-row>\\n        <ion-row>\\n\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.produto_cad_field_label_preco_compra}}</ion-label>\\n                    <ion-input formControlName=\\\"precoCompra\\\" [attr.maxLength]=\\\"entity.precoCompra_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.produto_cad_field_label_preco_venda}}</ion-label>\\n                    <ion-input formControlName=\\\"precoVenda\\\" [attr.maxLength]=\\\"entity.precoVenda_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n\\n\\n         <!--    <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.produto_cad_field_label_unidade}}</ion-label>\\n                    <ion-select formControlName=\\\"unidade\\\" [selectedText]=\\\"item.sigla\\\">\\n                        <ion-select-option *ngFor=\\\"let item of listUnidades\\\" value=\\\"{{item.sigla}}\\\"\\n                            {{ item.sigla }}\\n                        </ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n            </ion-col> -->\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.produto_cad_field_label_observacao}}</ion-label>\\n                    <ion-input formControlName=\\\"observacao\\\" [attr.maxLength]=\\\"entity.observacao_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n\\n    </form>\\n</ion-content>\";","import { Entity } from \"./Entity\";\r\nimport { ProdutoCategoria } from \"./ProdutoCategoria\";\r\nimport { Unidade } from \"./Unidade\";\r\n\r\nexport class Produto extends Entity {\r\n\r\n    nome: string;\r\n    precoCompra: number;\r\n    precoVenda: number;\r\n    categoria: ProdutoCategoria = new ProdutoCategoria();\r\n    unidade: Unidade = new Unidade();\r\n    observacao: string;\r\n    criadoEm: Date;\r\n    atualizadoEm: Date;\r\n\r\n    /**  FIELDS LENGTH's */\r\n    public readonly nome_length = 50;\r\n    public readonly observacao_length = 100;\r\n    public readonly precoCompra_length = 6;\r\n    public readonly precoVenda_length = 6;\r\n    public readonly unidade_length = 3;\r\n    public readonly categoria_length = 30;\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProdutoCadPage } from './produto-cad.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProdutoCadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProdutoCadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProdutoCadPageRoutingModule } from './produto-cad-routing.module';\n\nimport { ProdutoCadPage } from './produto-cad.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProdutoCadPageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [ProdutoCadPage]\n})\nexport class ProdutoCadPageModule {}\n","import { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GenericCadPage } from '../../generic/generic-cad/generic-cad.page';\nimport { IonInput } from '@ionic/angular';\nimport { UtilValidators } from 'src/app/utils/UtilValidators';\nimport { Produto } from 'src/app/entity/Produto';\nimport { Unidade } from 'src/app/entity/Unidade';\n\n\n@Component({\n    selector: 'app-produto-cad',\n    templateUrl: './produto-cad.page.html'\n})\nexport class ProdutoCadPage extends GenericCadPage implements OnInit {\n\n    @ViewChild('inputNome', { static: false }) inputNome: IonInput;\n    public listUnidades: any[] = [];\n    public listCategorias: any[] = [];\n\n    ngOnInit() {\n        this.createFormFields();\n\n    }\n\n    ionViewWillEnter() {\n        this.getUnidades();\n        this.hideLoading();\n        this.initForm();\n    }\n\n    ionViewDidEnter() {\n        this.showFocus();\n    }\n\n    initForm() {\n\n        /** NOVO */\n        if (!this.isAlterCad()) {\n            this.entity = new Produto();\n        } else {\n\n        }\n    }\n\n    createFormFields() {\n        this.form = new FormGroup({\n            nome: new FormControl(this.entity.nome, [Validators.required]),\n            precoCompra: new FormControl(this.entity.precoCompra,),\n            precoVenda: new FormControl(this.entity.precoVenda),\n            unidade: new FormControl(this.entity.unidade),\n            observacao: new FormControl(this.entity.observacao),\n        });\n\n       console.log(this.entity.unidade);\n    }\n\n    async submitForm() {\n        console.log(this.entity);\n\n        if (this.validForm()) {\n            this.showLoading();\n\n            this.produtoController.salvarOuAlterar(this.entity).subscribe(data => {\n                if (!this.entity.id) this.entity.id = data.id;\n                this.messageController.showMessageToast(this.messages.dialogs_register_save);\n                this.navigatePostParams('produto-list', this.entity, this.entityIndex);\n                this.hideLoading();\n            });\n        }\n    }\n\n    showFocus() {\n        setTimeout(() => this.inputNome.setFocus(), 400);\n    }\n\n    formatEntity() {\n\n    }\n\n    compareWith(o1: Unidade, o2: Unidade) {\n        console.log(o1, o2);\n        return o1 && o2 ? o1.id === o2.id : o1 === o2;\n\n    \n      }\n\n        public getUnidades() {\n        this.unidadeController.buscarTodos().subscribe((result: any) => {\n            this.listUnidades = result;\n            this.entity.unidade.sigla = \"LT\";\n            //this.form.controls.unidade.setValue(\"UND\");\n\n            this.listUnidades.forEach(element => {\n                if (element.id == this.entity.unidade.id) {\n                    this.entity.unidade = element;\n                   // this.form.controls.unidade.setValue(\"LT\");\n                   // this.form.get('unidade').updateValueAndValidity();\n\n                    \n                   // this.form.get('unidade').updateValueAndValidity();\n                   // console.log('achei', this.entity.unidade)\n                }\n\n            });\n        });\n    }\n\n\n    \n\n   \n\n\n\n\n\n\n}\n"]}