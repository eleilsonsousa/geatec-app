{"version":3,"sources":["webpack:///src/app/pages/cadastro/generic/generic-list/generic-list.page.html","webpack:///src/app/controller/ClienteController.ts","webpack:///src/app/controller/LoadController.ts","webpack:///src/app/controller/MessageController.ts","webpack:///src/app/controller/UnidadeController.ts","webpack:///src/app/pages/cadastro/generic/generic-list/generic-list.page.ts"],"names":["ClienteController","httpClient","url","httpOptions","headers","get","pipe","handleError","id","cliente","post","JSON","stringify","put","alterar","salvar","error","errorMessage","ErrorEvent","message","status","console","log","providedIn","LoadController","loadingController","duration","create","loading","present","dismiss","MessageController","alertController","toastController","title","header","subHeader","buttons","alert","onDidDismiss","result","cssClass","toast","text","role","handler","blah","UnidadeController","unidade","GenericListPage","unidadeController","clienteController","navCtrl","router","messageController","routerActive","searchStr","entities","showLoading","navigateGetParams","setTimeout","autofocusSeachBar","setFocus","params","subscribe","getNav","getCurrentNavigation","extras","state","postParams","index","saveItemLists","entity","updateItemLists","navigationExtras","navigate","navigateForward","hideLoading","push","entitiesFiltradas","length","element","splice","selector","template"],"mappings":"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","file":"default~pages-cadastro-cliente-cliente-list-cliente-list-module~pages-cadastro-unidade-unidade-list-~5fe5f5d2-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>generic-list</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\";","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Cliente } from '../entity/Cliente';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ClienteController {\r\n\r\n    url = 'http://geatec-com-br.umbler.net/clientes'; // api rest fake\r\n\r\n    // injetando o HttpClient\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    // Headers\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    }\r\n\r\n\r\n    // Obtem todos os carros\r\n    buscarTodos(): Observable<Cliente[]> {\r\n        return this.httpClient.get<Cliente[]>(this.url)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError))\r\n    }\r\n\r\n    // Obtem um carro pelo id\r\n    buscarPorId(id: number): Observable<Cliente> {\r\n        return this.httpClient.get<Cliente>(this.url + '/' + id)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    /** SALVAR  */\r\n    salvar(cliente: Cliente): Observable<Cliente> {\r\n        return this.httpClient.post<Cliente>(this.url, JSON.stringify(cliente), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    alterar(cliente: Cliente): Observable<Cliente> {\r\n        return this.httpClient.put<Cliente>(this.url, JSON.stringify(cliente), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    salvarOuAlterar(cliente:Cliente): Observable<Cliente> {\r\n         if (cliente.id) {\r\n            return this.alterar(cliente);\r\n        } else {\r\n            return this.salvar(cliente);\r\n        }\r\n    }\r\n\r\n    excluir(cliente: Cliente): any {\r\n        return this.httpClient.delete<Cliente>(this.url + '/' + cliente.id, this.httpOptions)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n\r\n    // Manipulação de erros\r\n    handleError(error: HttpErrorResponse) {\r\n        let errorMessage = '';\r\n        if (error.error instanceof ErrorEvent) {\r\n            // Erro ocorreu no lado do client\r\n            errorMessage = error.error.message;\r\n        } else {\r\n            // Erro ocorreu no lado do servidor\r\n            errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\r\n        }\r\n        console.log(errorMessage);\r\n        return throwError(errorMessage);\r\n    };\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoadController {\r\n\r\n    constructor(private loadingController: LoadingController) { }\r\n\r\n    async showLoading(message: string = null, duration: number = null) {\r\n        const loading = await this.loadingController.create({ message, duration });\r\n        return await loading.present();\r\n    }\r\n\r\n    async hideLoading() {\r\n        this.loadingController.dismiss();\r\n       /*  setTimeout(() => {\r\n           this.loadingController.dismiss();\r\n        }, 500); */\r\n    }\r\n\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { AlertController, ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MessageController {\r\n\r\n\r\n    constructor(public alertController: AlertController,\r\n        public toastController: ToastController) {\r\n    }\r\n\r\n    async showMessage(title: string, message: string) {\r\n        const alert = await this.alertController.create({\r\n            header: title,\r\n            subHeader: '',\r\n            message: message,\r\n            buttons: ['OK'],\r\n        });\r\n\r\n        await alert.present();\r\n        let result = await alert.onDidDismiss();\r\n        console.log(result);\r\n    }\r\n\r\n    async showMessageToast(message: string) {\r\n        const toast = await this.toastController.create({\r\n            message: message,\r\n            duration: 2000,\r\n            cssClass: 'toast-message'\r\n        });\r\n        toast.present();\r\n    }\r\n\r\n    async showMessageConfirm(message: string) {\r\n        let result = false;\r\n        const alert = await this.alertController.create({\r\n          cssClass: 'my-custom-class',\r\n          header: 'Confirmação!',\r\n          message: message,\r\n          buttons: [\r\n            {\r\n              text: 'Não',\r\n              role: 'cancel',\r\n              cssClass: 'secondary',\r\n              handler: (blah) => {\r\n                result = false;\r\n              }\r\n            }, {\r\n              text: 'Sim',\r\n              handler: () => {\r\n                result = true;\r\n              }\r\n            }\r\n          ]\r\n        });\r\n    \r\n       await alert.present();\r\n       await alert.onDidDismiss();  \r\n       return result;\r\n      }\r\n    \r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Unidade } from '../entity/Unidade';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UnidadeController {\r\n\r\n    url = 'http://geatec-com-br.umbler.net/unidades'; // api rest fake\r\n\r\n    // injetando o HttpClient\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    // Headers\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    }\r\n\r\n\r\n    // Obtem todos os carros\r\n    buscarTodos(): Observable<Unidade[]> {\r\n        return this.httpClient.get<Unidade[]>(this.url)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError))\r\n    }\r\n\r\n    // Obtem um carro pelo id\r\n    buscarPorId(id: number): Observable<Unidade> {\r\n        return this.httpClient.get<Unidade>(this.url + '/' + id)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    /** SALVAR  */\r\n    salvar(unidade: Unidade): Observable<Unidade> {\r\n        return this.httpClient.post<Unidade>(this.url, JSON.stringify(unidade), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    alterar(unidade: Unidade): Observable<Unidade> {\r\n        return this.httpClient.put<Unidade>(this.url, JSON.stringify(unidade), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    salvarOuAlterar(unidade:Unidade): Observable<Unidade> {\r\n         if (unidade.id) {\r\n            return this.alterar(unidade);\r\n        } else {\r\n            return this.salvar(unidade);\r\n        }\r\n    }\r\n\r\n    excluir(unidade: Unidade): any {\r\n        return this.httpClient.delete<Unidade>(this.url + '/' + unidade.id, this.httpOptions)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n\r\n    // Manipulação de erros\r\n    handleError(error: HttpErrorResponse) {\r\n        let errorMessage = '';\r\n        if (error.error instanceof ErrorEvent) {\r\n            // Erro ocorreu no lado do client\r\n            errorMessage = error.error.message;\r\n        } else {\r\n            // Erro ocorreu no lado do servidor\r\n            errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\r\n        }\r\n        console.log(errorMessage);\r\n        return throwError(errorMessage);\r\n    };\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { IonSearchbar, LoadingController, NavController, ToastController } from '@ionic/angular';\nimport { ClienteController } from 'src/app/controller/ClienteController';\nimport { LoadController } from 'src/app/controller/LoadController';\nimport { MessageController } from 'src/app/controller/MessageController';\nimport { UnidadeController } from 'src/app/controller/UnidadeController';\n\n@Component({\n    selector: 'app-generic-list',\n    templateUrl: './generic-list.page.html'\n})\nexport class GenericListPage {\n\n    @ViewChild('autofocus', { static: false }) autofocusSeachBar: IonSearchbar;\n\n    ionViewWillEnter() {\n        setTimeout(() => this.autofocusSeachBar.setFocus(), 300);\n    }\n\n    public searchStr: string = \"\";\n    public entity: any;\n    public entities: any[] = [];\n    public entitiesFiltradas: any;\n\n    constructor(\n        public unidadeController: UnidadeController,\n        public clienteController: ClienteController,\n        public toastController: ToastController,\n        public navCtrl: NavController,\n        public router: Router,\n        public messageController: MessageController,\n        private routerActive: ActivatedRoute,\n        public loadingController: LoadController) {\n        this.showLoading();\n        this.navigateGetParams()\n    }\n\n    public navigateGetParams(): any {\n        this.routerActive.params.subscribe(params => {\n            let getNav = this.router.getCurrentNavigation();\n            if (getNav.extras.state) {\n                let result = getNav.extras.state.postParams;\n\n                console.log('Param', result);\n\n                /** result.index --> indice do objeto da lista */\n                if (result.index == null) {\n                    this.saveItemLists(result.entity);\n                } else {\n                    this.updateItemLists(result.entity);\n                }\n            }\n        });\n\n    }\n\n    public navigatePostParams(url: string, entity: any, index: any) {\n        let navigationExtras: NavigationExtras = {\n            state: {\n                postParams: { entity: entity, index: index }\n            }\n        };\n        this.router.navigate(['/' + url], navigationExtras);\n    }\n\n    public navigate(url: string) {\n        this.navCtrl.navigateForward('/' + url);\n    }\n\n    public showLoading() {\n        this.loadingController.showLoading('Aguarde, por favor...', 1000);\n    }\n\n    async hideLoading() {\n        await this.loadingController.hideLoading();\n    }\n\n    saveItemLists(entity) {\n        this.entities.push(entity);\n        this.entities = [...this.entities]; // REFRESH \n\n        if (this.entitiesFiltradas != null) {\n            this.entitiesFiltradas.push(entity);\n            this.entitiesFiltradas = [...this.entitiesFiltradas]; // REFRESH \n        }\n    }\n\n    removeItemLists(id) {\n        if (this.entities != null)\n            for (let index = 0; index < this.entities.length; index++) {\n                const element = this.entities[index];\n                if (element.id == id) {\n                    this.entities.splice(index, 1);\n                    this.entities = [...this.entities]; // REFRESH \n                    console.log('Delete ', element);\n                    break;\n                }\n            }\n\n        if (this.entitiesFiltradas != null)\n            for (let index = 0; index < this.entitiesFiltradas.length; index++) {\n                const element = this.entitiesFiltradas[index];\n                if (element.id == id) {\n                    this.entitiesFiltradas.splice(index, 1);\n                    this.entitiesFiltradas = [...this.entitiesFiltradas]; // REFRESH \n                    console.log('Delete ', element);\n                    break;\n                }\n            }\n    }\n\n    updateItemLists(entity) {\n        if (this.entities != null)\n            for (let index = 0; index < this.entities.length; index++) {\n                const element = this.entities[index];\n                if (element.id == entity.id) {\n                    this.entities.splice(index, 1, entity);\n                    this.entities = [...this.entities]; // REFRESH\n                    console.log('Atualizado: ', element);\n                    break;\n                }\n            }\n\n        if (this.entitiesFiltradas != null)\n            for (let index = 0; index < this.entitiesFiltradas.length; index++) {\n                const element = this.entitiesFiltradas[index];\n                if (element.id == entity.id) {\n                    this.entitiesFiltradas.splice(index, 1, entity);\n                    this.entitiesFiltradas = [...this.entitiesFiltradas]; // REFRESH\n                    console.log('Atualizado: ', element);\n                    break;\n                }\n            }\n    }\n\n    \n}\n"]}