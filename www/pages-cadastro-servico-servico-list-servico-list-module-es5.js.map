{"version":3,"sources":["webpack:///src/app/pages/cadastro/servico/servico-list/servico-list.page.html","webpack:///src/app/pages/cadastro/servico/servico-list/servico-list-routing.module.ts","webpack:///src/app/pages/cadastro/servico/servico-list/servico-list.module.ts","webpack:///src/app/pages/cadastro/servico/servico-list/servico-list.page.ts"],"names":["routes","path","component","ServicoListPageRoutingModule","imports","forChild","exports","ServicoListPageModule","declarations","ServicoListPage","isShowSearch","entities","length","buscarTodos","navigate","showLoading","servicoController","subscribe","result","refreshList","hideLoading","showPanelCad","entity","messageController","showMessageConfirm","messages","dialogs_register_delete_confirmation","excluir","removeItemLists","id","showMessageToast","dialogs_register_delete","index","indexOf","buscarPorId","navigatePostParams","dialogs_register_no_exists","value","searchStr","filter","isShowBottomClose","entitiesFiltradas","formatCurrencyToBRL","selector","template"],"mappings":"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","file":"pages-cadastro-servico-servico-list-servico-list-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar color=\\\"primary\\\">\\n\\n        <ion-buttons *ngIf=\\\"!isShowSearch\\\" slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-buttons *ngIf=\\\"!isShowSearch\\\" slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n\\n        <ion-title *ngIf=\\\"!isShowSearch\\\">{{messages.servico_list_title}}</ion-title>\\n\\n        <ion-buttons *ngIf=\\\"!isShowSearch && isEntities\\\" slot=\\\"end\\\">\\n            <ion-button (click)=\\\"inicializeList()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"reload\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button (click)=\\\"showSearchBar()\\\" style=\\\"margin-right: 10px\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-buttons *ngIf=\\\"isShowSearch\\\" style=\\\"width: 100%;\\\">\\n\\n            <ion-button slot=\\\"start\\\" (click)=\\\"hideSearchBar()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button>\\n\\n            <ion-input autofocus=\\\"true\\\" placeHolder=\\\"Pesquisar\\\" #inputSearch debounce=\\\"200\\\"\\n                (ionChange)=\\\"changeSearch($event.target.value)\\\">\\n            </ion-input>\\n\\n            <ion-button *ngIf=\\\"isShowBottomClose\\\" slot=\\\"end\\\" (click)=\\\"deleteSearch()\\\" style=\\\"margin-right: 10px\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n        <ion-fab-button [routerLink]=\\\"['/servico-cad']\\\">\\n            <ion-icon name=\\\"add\\\"></ion-icon>\\n        </ion-fab-button>\\n    </ion-fab>\\n\\n    <ion-list>\\n        <ion-item *ngFor=\\\"let entity of getEntities()\\\">\\n            <ion-icon name=\\\"build-outline\\\"></ion-icon>\\n            <ion-label class=\\\"ion-text-wrap\\\" style=\\\"margin-left: 12px;\\\">\\n                <ion-text>\\n                    <h2> {{entity.nome }}</h2>\\n                </ion-text>\\n                <p> R$ {{formatToBrl(entity.preco)}}</p>\\n            </ion-label>\\n\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"alterar(entity)\\\">\\n                <ion-icon color=\\\"primary\\\" slot=\\\"icon-only\\\" name=\\\"create-outline\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"excluir(entity)\\\">\\n                <ion-icon color=\\\"primary\\\" slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ion-list>\\n\\n    <div *ngIf=\\\"!isEntities\\\" class=\\\"image-center\\\">\\n        <ion-row>\\n            <img src=\\\"assets/ilustrations/list-servicos.png\\\" />\\n        </ion-row>\\n        <ion-row>\\n            <ion-col>\\n                <h6>{{messages.servico_list_no_dados}}</h6>\\n            </ion-col>\\n        </ion-row>\\n    </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ServicoListPage } from './servico-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ServicoListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ServicoListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ServicoListPageRoutingModule } from './servico-list-routing.module';\n\nimport { ServicoListPage } from './servico-list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ServicoListPageRoutingModule\n  ],\n  declarations: [ServicoListPage]\n})\nexport class ServicoListPageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonInput } from '@ionic/angular';\nimport { Servico } from 'src/app/entity/Servico';\nimport { UtilApp } from 'src/app/utils/UtilApp';\nimport { GenericListPage } from '../../generic/generic-list/generic-list.page';\n\n@Component({\n    selector: 'app-servico-list',\n    templateUrl: './servico-list.page.html'\n})\nexport class ServicoListPage extends GenericListPage implements OnInit {\n\n\n    ngOnInit() { }\n\n    ionViewWillEnter() {\n        this.isShowSearch = false;\n        if (this.entities.length <= 0) {\n            this.buscarTodos();\n        }\n    }\n\n    novo() {\n        this.navigate('servico-cad');\n    }\n\n    buscarTodos() {\n        this.showLoading();\n        this.servicoController.buscarTodos().subscribe((result: any) => {\n            this.entities = result;\n            this.refreshList();\n            this.hideLoading();\n            this.showPanelCad();\n        });\n    }\n\n    async excluir(entity: Servico) {\n        const result = await this.messageController.showMessageConfirm(this.messages.dialogs_register_delete_confirmation);\n        if (!result) return;\n\n        this.showLoading();\n        this.servicoController.excluir(entity).subscribe(() => {\n            this.removeItemLists(entity.id);\n            this.messageController.showMessageToast(this.messages.dialogs_register_delete);\n            this.hideLoading();\n            this.showPanelCad();\n        })\n    }\n\n    async alterar(entity: Servico) {\n        this.showLoading();\n        const index = this.entities.indexOf(entity);\n\n        this.servicoController.buscarPorId(entity.id).subscribe((result: any) => {\n            if (result.length > 0) {\n                entity = result[0];\n                super.navigatePostParams('servico-cad', entity, index);\n                this.hideLoading();\n            } else {\n                this.messageController.showMessageToast(this.messages.dialogs_register_no_exists);\n                this.refreshList();\n                this.hideLoading();\n            }\n        })\n    }\n\n    changeSearch(value) {\n        this.searchStr = value;\n        this.filter('nome', 'preco', null, null);\n        this.isShowBottomClose = this.searchStr.length > 0;\n    }\n\n    inicializeList() {\n        this.entities = [];\n        this.entitiesFiltradas = [];\n        this.buscarTodos();\n    }\n\n    formatToBrl(value) {\n        return UtilApp.formatCurrencyToBRL(value);\n    }\n\n}\n"]}