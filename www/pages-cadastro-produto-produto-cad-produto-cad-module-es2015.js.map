{"version":3,"sources":["./src/app/pages/cadastro/produto/produto-cad/produto-cad.page.html","./src/app/entity/Produto.ts","./src/app/pages/cadastro/produto/produto-cad/produto-cad-routing.module.ts","./src/app/pages/cadastro/produto/produto-cad/produto-cad.module.ts","./src/app/pages/cadastro/produto/produto-cad/produto-cad.page.ts"],"names":[],"mappings":"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","file":"pages-cadastro-produto-produto-cad-produto-cad-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>{{messages.produto_cad_title}}</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"submitForm()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n            </ion-button>\\n\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.produto_cad_field_label_nome}}</ion-label>\\n                    <ion-input formControlName=\\\"nome\\\" #inputNome [attr.maxLength]=\\\"entity.nome_length\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div *ngIf=\\\"isSubmitted && errorControl.nome.errors?.required\\\" class=\\\"error-message\\\">\\n                    {{ messages.field_required }}\\n                </div>\\n\\n            </ion-col>\\n\\n        </ion-row>\\n        <ion-row>\\n\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.produto_cad_field_label_preco_compra}}</ion-label>\\n                    <ion-input formControlName=\\\"precoCompra\\\" [attr.maxLength]=\\\"entity.precoCompra_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.produto_cad_field_label_preco_venda}}</ion-label>\\n                    <ion-input formControlName=\\\"precoVenda\\\" [attr.maxLength]=\\\"entity.precoVenda_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n\\n\\n         <!--    <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.produto_cad_field_label_unidade}}</ion-label>\\n                    <ion-select formControlName=\\\"unidade\\\" [selectedText]=\\\"item.sigla\\\">\\n                        <ion-select-option *ngFor=\\\"let item of listUnidades\\\" value=\\\"{{item.sigla}}\\\"\\n                            {{ item.sigla }}\\n                        </ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n            </ion-col> -->\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.produto_cad_field_label_observacao}}</ion-label>\\n                    <ion-input formControlName=\\\"observacao\\\" [attr.maxLength]=\\\"entity.observacao_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n\\n    </form>\\n</ion-content>\";","import { Entity } from \"./Entity\";\r\nimport { ProdutoCategoria } from \"./ProdutoCategoria\";\r\nimport { Unidade } from \"./Unidade\";\r\n\r\nexport class Produto extends Entity {\r\n\r\n    nome: string;\r\n    precoCompra: number;\r\n    precoVenda: number;\r\n    categoria: ProdutoCategoria = new ProdutoCategoria();\r\n    unidade: Unidade = new Unidade();\r\n    observacao: string;\r\n    criadoEm: Date;\r\n    atualizadoEm: Date;\r\n\r\n    /**  FIELDS LENGTH's */\r\n    public readonly nome_length = 50;\r\n    public readonly observacao_length = 100;\r\n    public readonly precoCompra_length = 6;\r\n    public readonly precoVenda_length = 6;\r\n    public readonly unidade_length = 3;\r\n    public readonly categoria_length = 30;\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProdutoCadPage } from './produto-cad.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProdutoCadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProdutoCadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProdutoCadPageRoutingModule } from './produto-cad-routing.module';\n\nimport { ProdutoCadPage } from './produto-cad.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProdutoCadPageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [ProdutoCadPage]\n})\nexport class ProdutoCadPageModule {}\n","import { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GenericCadPage } from '../../generic/generic-cad/generic-cad.page';\nimport { IonInput } from '@ionic/angular';\nimport { UtilValidators } from 'src/app/utils/UtilValidators';\nimport { Produto } from 'src/app/entity/Produto';\nimport { Unidade } from 'src/app/entity/Unidade';\n\n\n@Component({\n    selector: 'app-produto-cad',\n    templateUrl: './produto-cad.page.html'\n})\nexport class ProdutoCadPage extends GenericCadPage implements OnInit {\n\n    @ViewChild('inputNome', { static: false }) inputNome: IonInput;\n    public listUnidades: any[] = [];\n    public listCategorias: any[] = [];\n\n    ngOnInit() {\n        this.createFormFields();\n\n    }\n\n    ionViewWillEnter() {\n        this.getUnidades();\n        this.hideLoading();\n        this.initForm();\n    }\n\n    ionViewDidEnter() {\n        this.showFocus();\n    }\n\n    initForm() {\n\n        /** NOVO */\n        if (!this.isAlterCad()) {\n            this.entity = new Produto();\n        } else {\n\n        }\n    }\n\n    createFormFields() {\n        this.form = new FormGroup({\n            nome: new FormControl(this.entity.nome, [Validators.required]),\n            precoCompra: new FormControl(this.entity.precoCompra,),\n            precoVenda: new FormControl(this.entity.precoVenda),\n            unidade: new FormControl(this.entity.unidade),\n            observacao: new FormControl(this.entity.observacao),\n        });\n\n       console.log(this.entity.unidade);\n    }\n\n    async submitForm() {\n        console.log(this.entity);\n\n        if (this.validForm()) {\n            this.showLoading();\n\n            this.produtoController.salvarOuAlterar(this.entity).subscribe(data => {\n                if (!this.entity.id) this.entity.id = data.id;\n                this.messageController.showMessageToast(this.messages.dialogs_register_save);\n                this.navigatePostParams('produto-list', this.entity, this.entityIndex);\n                this.hideLoading();\n            });\n        }\n    }\n\n    showFocus() {\n        setTimeout(() => this.inputNome.setFocus(), 400);\n    }\n\n    formatEntity() {\n\n    }\n\n    compareWith(o1: Unidade, o2: Unidade) {\n        console.log(o1, o2);\n        return o1 && o2 ? o1.id === o2.id : o1 === o2;\n\n    \n      }\n\n        public getUnidades() {\n        this.unidadeController.buscarTodos().subscribe((result: any) => {\n            this.listUnidades = result;\n            this.entity.unidade.sigla = \"LT\";\n            //this.form.controls.unidade.setValue(\"UND\");\n\n            this.listUnidades.forEach(element => {\n                if (element.id == this.entity.unidade.id) {\n                    this.entity.unidade = element;\n                   // this.form.controls.unidade.setValue(\"LT\");\n                   // this.form.get('unidade').updateValueAndValidity();\n\n                    \n                   // this.form.get('unidade').updateValueAndValidity();\n                   // console.log('achei', this.entity.unidade)\n                }\n\n            });\n        });\n    }\n\n\n    \n\n   \n\n\n\n\n\n\n}\n"],"sourceRoot":"webpack:///"}