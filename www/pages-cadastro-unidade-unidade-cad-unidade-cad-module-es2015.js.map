{"version":3,"sources":["./src/app/pages/cadastro/generic/generic-cad/generic-cad.page.html","./src/app/pages/cadastro/unidade/unidade-cad/unidade-cad.page.html","./src/app/controller/LoadController.ts","./src/app/controller/MessageController.ts","./src/app/controller/UnidadeController.ts","./src/app/pages/cadastro/generic/generic-cad/generic-cad.page.ts","./src/app/pages/cadastro/unidade/unidade-cad/unidade-cad-routing.module.ts","./src/app/pages/cadastro/unidade/unidade-cad/unidade-cad.module.ts","./src/app/pages/cadastro/unidade/unidade-cad/unidade-cad.page.ts"],"names":[],"mappings":"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","file":"pages-cadastro-unidade-unidade-cad-unidade-cad-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>generic-cad</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Unidade</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"submitForm()\\\">\\n                <ion-icon color=\\\"primary\\\" slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">Nome</ion-label>\\n                    <ion-input formControlName=\\\"nome\\\" #autofocus maxlength=\\\"20\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div class=\\\"error-message\\\" *ngIf=\\\"isSubmitted && errorControl.nome.errors?.required\\\">\\n                    * campo obrigat√≥rio\\n                </div>\\n            </ion-col>\\n\\n            <ion-col>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\">Sigla</ion-label>\\n                    <ion-input formControlName=\\\"sigla\\\" maxlength=\\\"5\\\" class=\\\"upper-case\\\" ></ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div class=\\\"error-message\\\" *ngIf=\\\"isSubmitted && errorControl.sigla.errors?.required\\\">\\n                    * campo obrigat√≥rio\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n        <ion-row>\\n\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">Descri√ß√£o</ion-label>\\n                    <ion-input formControlName=\\\"descricao\\\" maxlength=\\\"80\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n    </form>\\n\\n</ion-content>\";","import { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoadController {\r\n\r\n    constructor(private loadingController: LoadingController) { }\r\n\r\n    async showLoading(message: string = null, duration: number = null) {\r\n        const loading = await this.loadingController.create({ message, duration });\r\n        return await loading.present();\r\n    }\r\n\r\n    async hideLoading() {\r\n        this.loadingController.dismiss();\r\n       /*  setTimeout(() => {\r\n           this.loadingController.dismiss();\r\n        }, 500); */\r\n    }\r\n\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { AlertController, ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MessageController {\r\n\r\n\r\n    constructor(public alertController: AlertController,\r\n        public toastController: ToastController) {\r\n    }\r\n\r\n    async showMessage(title: string, message: string) {\r\n        const alert = await this.alertController.create({\r\n            header: title,\r\n            subHeader: '',\r\n            message: message,\r\n            buttons: ['OK'],\r\n        });\r\n\r\n        await alert.present();\r\n        let result = await alert.onDidDismiss();\r\n        console.log(result);\r\n    }\r\n\r\n    async showMessageToast(message: string) {\r\n        const toast = await this.toastController.create({\r\n            message: message,\r\n            duration: 2000,\r\n            cssClass: 'toast-message'\r\n        });\r\n        toast.present();\r\n    }\r\n\r\n    async showMessageConfirm(message: string) {\r\n        let result = false;\r\n        const alert = await this.alertController.create({\r\n          cssClass: 'my-custom-class',\r\n          header: 'Confirma√ß√£o!',\r\n          message: message,\r\n          buttons: [\r\n            {\r\n              text: 'N√£o',\r\n              role: 'cancel',\r\n              cssClass: 'secondary',\r\n              handler: (blah) => {\r\n                result = false;\r\n              }\r\n            }, {\r\n              text: 'Sim',\r\n              handler: () => {\r\n                result = true;\r\n              }\r\n            }\r\n          ]\r\n        });\r\n    \r\n       await alert.present();\r\n       await alert.onDidDismiss();  \r\n       return result;\r\n      }\r\n    \r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Unidade } from '../entity/Unidade';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UnidadeController {\r\n\r\n    url = 'http://geatec-com-br.umbler.net/unidades'; // api rest fake\r\n\r\n    // injetando o HttpClient\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    // Headers\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    }\r\n\r\n\r\n    // Obtem todos os carros\r\n    buscarTodos(): Observable<Unidade[]> {\r\n        return this.httpClient.get<Unidade[]>(this.url)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError))\r\n    }\r\n\r\n    // Obtem um carro pelo id\r\n    buscarPorId(id: number): Observable<Unidade> {\r\n        return this.httpClient.get<Unidade>(this.url + '/' + id)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    /** SALVAR  */\r\n    salvar(unidade: Unidade): Observable<Unidade> {\r\n        return this.httpClient.post<Unidade>(this.url, JSON.stringify(unidade), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    alterar(unidade: Unidade): Observable<Unidade> {\r\n        return this.httpClient.put<Unidade>(this.url, JSON.stringify(unidade), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    salvarOuAlterar(unidade:Unidade): Observable<Unidade> {\r\n         if (unidade.id) {\r\n            return this.alterar(unidade);\r\n        } else {\r\n            return this.salvar(unidade);\r\n        }\r\n    }\r\n\r\n    excluir(unidade: Unidade): any {\r\n        return this.httpClient.delete<Unidade>(this.url + '/' + unidade.id, this.httpOptions)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n\r\n    // Manipula√ß√£o de erros\r\n    handleError(error: HttpErrorResponse) {\r\n        let errorMessage = '';\r\n        if (error.error instanceof ErrorEvent) {\r\n            // Erro ocorreu no lado do client\r\n            errorMessage = error.error.message;\r\n        } else {\r\n            // Erro ocorreu no lado do servidor\r\n            errorMessage = `C√≥digo do erro: ${error.status}, ` + `menssagem: ${error.message}`;\r\n        }\r\n        console.log(errorMessage);\r\n        return throwError(errorMessage);\r\n    };\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { IonInput, NavController, ToastController } from '@ionic/angular';\nimport { LoadController } from 'src/app/controller/LoadController';\nimport { MessageController } from 'src/app/controller/MessageController';\nimport { UnidadeController } from 'src/app/controller/UnidadeController';\n\n@Component({\n    selector: 'app-generic-cad',\n    templateUrl: './generic-cad.page.html'\n})\nexport class GenericCadPage {\n\n    @ViewChild('autofocus', { static: false }) autofocuInputs: IonInput;\n\n    ionViewWillEnter() {\n        setTimeout(() => this.autofocuInputs.setFocus(), 300);\n    }\n\n    /** DADOS GENERICOS PARA CADASTROS */\n    public form: FormGroup;\n    public entity: any = {};\n    public entityIndex: any;\n    public isSubmitted = false;\n    public postParams: any;\n    /**************************************** */\n\n\n    constructor(\n        public unidadeController: UnidadeController,\n        public navCtrl: NavController,\n        public router: Router,\n        public messageController: MessageController,\n        private routerActive: ActivatedRoute,\n        public loadingController: LoadController) {\n        this.navigateGetParams();\n    }\n\n    public get errorControl() {\n        return this.form.controls;\n    }\n\n    public validForm(): boolean {\n        this.isSubmitted = true;\n        if (!this.form.valid)\n            return false;\n        else {\n            const id = this.entity.id;\n            this.entity = this.form.value;\n            this.entity.id = id;\n            return true;\n        }\n    }\n\n    navigatePostParams(url: string, entity: any, index: any) {\n        let navigationExtras: NavigationExtras = {\n            state: {\n                postParams: { entity: entity, index: index }\n            }\n        };\n        this.router.navigate(['/' + url], navigationExtras);\n    }\n\n    navigateGetParams(): any {\n        this.routerActive.params.subscribe(params => {\n            let getNav = this.router.getCurrentNavigation();\n            if (getNav.extras.state) {\n                const result = getNav.extras.state.postParams;\n                this.entity = result.entity;\n                this.entityIndex = result.index;\n            }\n        });\n\n    }\n\n    public showLoading(){\n       return this.loadingController.showLoading('Aguarde, por favor...');\n    }\n\n    async hideLoading() {\n       await this.loadingController.hideLoading();\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UnidadeCadPage } from './unidade-cad.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UnidadeCadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UnidadeCadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UnidadeCadPageRoutingModule } from './unidade-cad-routing.module';\n\nimport { UnidadeCadPage } from './unidade-cad.page';\nimport { SimpleMaskModule } from 'ngx-ion-simple-mask';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UnidadeCadPageRoutingModule,\n    ReactiveFormsModule,\n    SimpleMaskModule\n    \n    \n  ],\n  declarations: [UnidadeCadPage]\n})\nexport class UnidadeCadPageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IonInput, NavController } from '@ionic/angular';\nimport { UnidadeController } from 'src/app/controller/UnidadeController';\nimport { Unidade } from 'src/app/entity/Unidade';\nimport { GenericCadPage } from '../../generic/generic-cad/generic-cad.page';\n\n@Component({\n    selector: 'app-unidade-cad',\n    templateUrl: './unidade-cad.page.html'\n})\nexport class UnidadeCadPage extends GenericCadPage implements OnInit {\n\n\n    ngOnInit() {\n        this.createFormFields();\n    }\n\n    createFormFields() {\n        this.form = new FormGroup({\n            nome: new FormControl(this.entity.nome, [Validators.required]),\n            sigla: new FormControl(this.entity.sigla, [Validators.required]),\n            descricao: new FormControl(this.entity.descricao),\n        });\n    }\n\n    async submitForm() {\n        const validForm = this.validForm();\n\n        if (validForm) {\n            this.showLoading();\n            \n            //MELHORAR ISSO //\n            let unidade = (this.entity as Unidade);\n            unidade.sigla = unidade.sigla.toUpperCase();\n\n            this.unidadeController.salvarOuAlterar(unidade).subscribe(data => {\n\n                // NOVO REGISTRO//\n                if (!this.entity.id) this.entity.id = data.id;\n\n                this.messageController.showMessageToast('Registro salvo');\n                this.navigatePostParams('unidade-list', this.entity, this.entityIndex);\n                this.hideLoading();\n            });\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}