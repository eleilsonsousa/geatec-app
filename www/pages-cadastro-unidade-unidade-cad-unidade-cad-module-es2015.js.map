{"version":3,"sources":["./src/app/pages/cadastro/unidade/unidade-cad/unidade-cad.page.html","./src/app/pages/cadastro/unidade/unidade-cad/unidade-cad-routing.module.ts","./src/app/pages/cadastro/unidade/unidade-cad/unidade-cad.module.ts","./src/app/pages/cadastro/unidade/unidade-cad/unidade-cad.page.ts"],"names":[],"mappings":"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","file":"pages-cadastro-unidade-unidade-cad-unidade-cad-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>{{messages.unidade_cad_title}}</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"submitForm()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.unidade_cad_field_label_nome}}</ion-label>\\n                    <ion-input formControlName=\\\"nome\\\" #inputNome [attr.maxLength]=\\\"entity.nome_length\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div *ngIf=\\\"isSubmitted && errorControl.nome.errors?.required\\\" class=\\\"error-message\\\">\\n                    {{ messages.field_required }}\\n                </div>\\n\\n            </ion-col>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.unidade_cad_field_label_sigla}}</ion-label>\\n                    <ion-input  formControlName=\\\"sigla\\\"  class=\\\"upper-case\\\" [attr.maxLength]=\\\"entity.sigla_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div *ngIf=\\\"isSubmitted && errorControl.sigla.errors?.required\\\" class=\\\"error-message\\\">\\n                    {{ messages.field_required }}\\n                </div>\\n\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.unidade_cad_field_label_descricao}}</ion-label>\\n                    <ion-input formControlName=\\\"descricao\\\"  [attr.maxLength]=\\\"entity.descricao_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n    </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UnidadeCadPage } from './unidade-cad.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UnidadeCadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UnidadeCadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UnidadeCadPageRoutingModule } from './unidade-cad-routing.module';\n\nimport { UnidadeCadPage } from './unidade-cad.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UnidadeCadPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [UnidadeCadPage]\n})\nexport class UnidadeCadPageModule {}\n","import { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GenericCadPage } from '../../generic/generic-cad/generic-cad.page';\nimport { IonInput } from '@ionic/angular';\nimport { UtilValidators } from 'src/app/utils/UtilValidators';\nimport { Unidade } from 'src/app/entity/Unidade';\n\n@Component({\n    selector: 'app-unidade-cad',\n    templateUrl: './unidade-cad.page.html'\n})\nexport class UnidadeCadPage extends GenericCadPage implements OnInit {\n\n    @ViewChild('inputNome', { static: false }) inputNome: IonInput;\n\n    \n\n\n    ngOnInit() {\n        this.createFormFields();\n    }\n\n    ionViewWillEnter() {\n        this.hideLoading();\n        this.initForm();\n    }\n\n    ionViewDidEnter() {\n        this.showFocus();\n    }\n\n    initForm() {\n\n        /** NOVO */\n        if (!this.isAlterCad()) {\n            this.entity = new Unidade();\n        }\n    }\n\n    createFormFields() {\n        this.form = new FormGroup({\n            nome: new FormControl(this.entity.nome, [Validators.required]),\n            sigla: new FormControl(this.entity.sigla, [Validators.required]),\n            descricao: new FormControl(this.entity.descricao,),\n        });\n    }\n\n    async submitForm() {\n        if (this.validForm()) {\n            this.showLoading();\n            this.entity = this.formatEntity();\n            this.unidadeController.salvarOuAlterar(this.entity).subscribe(data => {\n                if (!this.entity.id) this.entity.id = data.id;\n                this.messageController.showMessageToast(this.messages.dialogs_register_save);\n                this.navigatePostParams('unidade-list', this.entity, this.entityIndex);\n                this.hideLoading();\n            });\n        }\n    }\n\n    showFocus() {\n        setTimeout(() => this.inputNome.setFocus(), 400);\n    }\n\n    formatEntity() {\n        this.entity.sigla = (this.entity.sigla + '').toLocaleUpperCase();\n        return this.entity;\n    }\n    \n\n\n\n}\n"],"sourceRoot":"webpack:///"}