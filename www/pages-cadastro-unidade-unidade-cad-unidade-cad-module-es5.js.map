{"version":3,"sources":["webpack:///src/app/pages/cadastro/generic/generic-cad/generic-cad.page.html","webpack:///src/app/pages/cadastro/unidade/unidade-cad/unidade-cad.page.html","webpack:///src/app/controller/LoadController.ts","webpack:///src/app/controller/MessageController.ts","webpack:///src/app/controller/UnidadeController.ts","webpack:///src/app/pages/cadastro/generic/generic-cad/generic-cad.page.ts","webpack:///src/app/pages/cadastro/unidade/unidade-cad/unidade-cad-routing.module.ts","webpack:///src/app/pages/cadastro/unidade/unidade-cad/unidade-cad.module.ts","webpack:///src/app/pages/cadastro/unidade/unidade-cad/unidade-cad.page.ts"],"names":["LoadController","loadingController","message","duration","create","loading","present","dismiss","providedIn","MessageController","alertController","toastController","title","header","subHeader","buttons","alert","onDidDismiss","result","console","log","cssClass","toast","text","role","handler","blah","UnidadeController","httpClient","url","httpOptions","headers","get","pipe","handleError","id","unidade","post","JSON","stringify","put","alterar","salvar","error","errorMessage","ErrorEvent","status","GenericCadPage","unidadeController","navCtrl","router","messageController","routerActive","entity","isSubmitted","navigateGetParams","setTimeout","autofocuInputs","setFocus","form","valid","value","index","navigationExtras","state","postParams","navigate","params","subscribe","getNav","getCurrentNavigation","extras","entityIndex","showLoading","hideLoading","controls","selector","template","routes","path","component","UnidadeCadPageRoutingModule","imports","forChild","exports","UnidadeCadPageModule","declarations","UnidadeCadPage","createFormFields","nome","required","sigla","descricao","validForm","toUpperCase","salvarOuAlterar","data","showMessageToast","navigatePostParams"],"mappings":"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","file":"pages-cadastro-unidade-unidade-cad-unidade-cad-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>generic-cad</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Unidade</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"submitForm()\\\">\\n                <ion-icon color=\\\"primary\\\" slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">Nome</ion-label>\\n                    <ion-input formControlName=\\\"nome\\\" #autofocus maxlength=\\\"20\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div class=\\\"error-message\\\" *ngIf=\\\"isSubmitted && errorControl.nome.errors?.required\\\">\\n                    * campo obrigatório\\n                </div>\\n            </ion-col>\\n\\n            <ion-col>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\">Sigla</ion-label>\\n                    <ion-input formControlName=\\\"sigla\\\" maxlength=\\\"5\\\" class=\\\"upper-case\\\" ></ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div class=\\\"error-message\\\" *ngIf=\\\"isSubmitted && errorControl.sigla.errors?.required\\\">\\n                    * campo obrigatório\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n        <ion-row>\\n\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">Descrição</ion-label>\\n                    <ion-input formControlName=\\\"descricao\\\" maxlength=\\\"80\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n    </form>\\n\\n</ion-content>\";","import { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoadController {\r\n\r\n    constructor(private loadingController: LoadingController) { }\r\n\r\n    async showLoading(message: string = null, duration: number = null) {\r\n        const loading = await this.loadingController.create({ message, duration });\r\n        return await loading.present();\r\n    }\r\n\r\n    async hideLoading() {\r\n        this.loadingController.dismiss();\r\n       /*  setTimeout(() => {\r\n           this.loadingController.dismiss();\r\n        }, 500); */\r\n    }\r\n\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { AlertController, ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MessageController {\r\n\r\n\r\n    constructor(public alertController: AlertController,\r\n        public toastController: ToastController) {\r\n    }\r\n\r\n    async showMessage(title: string, message: string) {\r\n        const alert = await this.alertController.create({\r\n            header: title,\r\n            subHeader: '',\r\n            message: message,\r\n            buttons: ['OK'],\r\n        });\r\n\r\n        await alert.present();\r\n        let result = await alert.onDidDismiss();\r\n        console.log(result);\r\n    }\r\n\r\n    async showMessageToast(message: string) {\r\n        const toast = await this.toastController.create({\r\n            message: message,\r\n            duration: 2000,\r\n            cssClass: 'toast-message'\r\n        });\r\n        toast.present();\r\n    }\r\n\r\n    async showMessageConfirm(message: string) {\r\n        let result = false;\r\n        const alert = await this.alertController.create({\r\n          cssClass: 'my-custom-class',\r\n          header: 'Confirmação!',\r\n          message: message,\r\n          buttons: [\r\n            {\r\n              text: 'Não',\r\n              role: 'cancel',\r\n              cssClass: 'secondary',\r\n              handler: (blah) => {\r\n                result = false;\r\n              }\r\n            }, {\r\n              text: 'Sim',\r\n              handler: () => {\r\n                result = true;\r\n              }\r\n            }\r\n          ]\r\n        });\r\n    \r\n       await alert.present();\r\n       await alert.onDidDismiss();  \r\n       return result;\r\n      }\r\n    \r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Unidade } from '../entity/Unidade';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UnidadeController {\r\n\r\n    url = 'http://geatec-com-br.umbler.net/unidades'; // api rest fake\r\n\r\n    // injetando o HttpClient\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    // Headers\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    }\r\n\r\n\r\n    // Obtem todos os carros\r\n    buscarTodos(): Observable<Unidade[]> {\r\n        return this.httpClient.get<Unidade[]>(this.url)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError))\r\n    }\r\n\r\n    // Obtem um carro pelo id\r\n    buscarPorId(id: number): Observable<Unidade> {\r\n        return this.httpClient.get<Unidade>(this.url + '/' + id)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    /** SALVAR  */\r\n    salvar(unidade: Unidade): Observable<Unidade> {\r\n        return this.httpClient.post<Unidade>(this.url, JSON.stringify(unidade), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    alterar(unidade: Unidade): Observable<Unidade> {\r\n        return this.httpClient.put<Unidade>(this.url, JSON.stringify(unidade), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    salvarOuAlterar(unidade:Unidade): Observable<Unidade> {\r\n         if (unidade.id) {\r\n            return this.alterar(unidade);\r\n        } else {\r\n            return this.salvar(unidade);\r\n        }\r\n    }\r\n\r\n    excluir(unidade: Unidade): any {\r\n        return this.httpClient.delete<Unidade>(this.url + '/' + unidade.id, this.httpOptions)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n\r\n    // Manipulação de erros\r\n    handleError(error: HttpErrorResponse) {\r\n        let errorMessage = '';\r\n        if (error.error instanceof ErrorEvent) {\r\n            // Erro ocorreu no lado do client\r\n            errorMessage = error.error.message;\r\n        } else {\r\n            // Erro ocorreu no lado do servidor\r\n            errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\r\n        }\r\n        console.log(errorMessage);\r\n        return throwError(errorMessage);\r\n    };\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { IonInput, NavController, ToastController } from '@ionic/angular';\nimport { LoadController } from 'src/app/controller/LoadController';\nimport { MessageController } from 'src/app/controller/MessageController';\nimport { UnidadeController } from 'src/app/controller/UnidadeController';\n\n@Component({\n    selector: 'app-generic-cad',\n    templateUrl: './generic-cad.page.html'\n})\nexport class GenericCadPage {\n\n    @ViewChild('autofocus', { static: false }) autofocuInputs: IonInput;\n\n    ionViewWillEnter() {\n        setTimeout(() => this.autofocuInputs.setFocus(), 300);\n    }\n\n    /** DADOS GENERICOS PARA CADASTROS */\n    public form: FormGroup;\n    public entity: any = {};\n    public entityIndex: any;\n    public isSubmitted = false;\n    public postParams: any;\n    /**************************************** */\n\n\n    constructor(\n        public unidadeController: UnidadeController,\n        public navCtrl: NavController,\n        public router: Router,\n        public messageController: MessageController,\n        private routerActive: ActivatedRoute,\n        public loadingController: LoadController) {\n        this.navigateGetParams();\n    }\n\n    public get errorControl() {\n        return this.form.controls;\n    }\n\n    public validForm(): boolean {\n        this.isSubmitted = true;\n        if (!this.form.valid)\n            return false;\n        else {\n            const id = this.entity.id;\n            this.entity = this.form.value;\n            this.entity.id = id;\n            return true;\n        }\n    }\n\n    navigatePostParams(url: string, entity: any, index: any) {\n        let navigationExtras: NavigationExtras = {\n            state: {\n                postParams: { entity: entity, index: index }\n            }\n        };\n        this.router.navigate(['/' + url], navigationExtras);\n    }\n\n    navigateGetParams(): any {\n        this.routerActive.params.subscribe(params => {\n            let getNav = this.router.getCurrentNavigation();\n            if (getNav.extras.state) {\n                const result = getNav.extras.state.postParams;\n                this.entity = result.entity;\n                this.entityIndex = result.index;\n            }\n        });\n\n    }\n\n    public showLoading(){\n       return this.loadingController.showLoading('Aguarde, por favor...');\n    }\n\n    async hideLoading() {\n       await this.loadingController.hideLoading();\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UnidadeCadPage } from './unidade-cad.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UnidadeCadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UnidadeCadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UnidadeCadPageRoutingModule } from './unidade-cad-routing.module';\n\nimport { UnidadeCadPage } from './unidade-cad.page';\nimport { SimpleMaskModule } from 'ngx-ion-simple-mask';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UnidadeCadPageRoutingModule,\n    ReactiveFormsModule,\n    SimpleMaskModule\n    \n    \n  ],\n  declarations: [UnidadeCadPage]\n})\nexport class UnidadeCadPageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IonInput, NavController } from '@ionic/angular';\nimport { UnidadeController } from 'src/app/controller/UnidadeController';\nimport { Unidade } from 'src/app/entity/Unidade';\nimport { GenericCadPage } from '../../generic/generic-cad/generic-cad.page';\n\n@Component({\n    selector: 'app-unidade-cad',\n    templateUrl: './unidade-cad.page.html'\n})\nexport class UnidadeCadPage extends GenericCadPage implements OnInit {\n\n\n    ngOnInit() {\n        this.createFormFields();\n    }\n\n    createFormFields() {\n        this.form = new FormGroup({\n            nome: new FormControl(this.entity.nome, [Validators.required]),\n            sigla: new FormControl(this.entity.sigla, [Validators.required]),\n            descricao: new FormControl(this.entity.descricao),\n        });\n    }\n\n    async submitForm() {\n        const validForm = this.validForm();\n\n        if (validForm) {\n            this.showLoading();\n            \n            //MELHORAR ISSO //\n            let unidade = (this.entity as Unidade);\n            unidade.sigla = unidade.sigla.toUpperCase();\n\n            this.unidadeController.salvarOuAlterar(unidade).subscribe(data => {\n\n                // NOVO REGISTRO//\n                if (!this.entity.id) this.entity.id = data.id;\n\n                this.messageController.showMessageToast('Registro salvo');\n                this.navigatePostParams('unidade-list', this.entity, this.entityIndex);\n                this.hideLoading();\n            });\n        }\n    }\n\n}\n"]}