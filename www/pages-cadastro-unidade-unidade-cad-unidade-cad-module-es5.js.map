{"version":3,"sources":["webpack:///src/app/pages/cadastro/unidade/unidade-cad/unidade-cad.page.html","webpack:///src/app/controller/ClienteController.ts","webpack:///src/app/controller/Controller.ts","webpack:///src/app/controller/FabricanteController.ts","webpack:///src/app/controller/LoadController.ts","webpack:///src/app/controller/MessageController.ts","webpack:///src/app/controller/ProdutoCategoriaController.ts","webpack:///src/app/controller/ProdutoController.ts","webpack:///src/app/controller/ServicoController.ts","webpack:///src/app/controller/UnidadeController.ts","webpack:///src/app/pages/cadastro/unidade/unidade-cad/unidade-cad-routing.module.ts","webpack:///src/app/pages/cadastro/unidade/unidade-cad/unidade-cad.module.ts","webpack:///src/app/pages/cadastro/unidade/unidade-cad/unidade-cad.page.ts"],"names":["ClienteController","providedIn","Controller","urlClass","url_base","http","getHttpClient","httpOptions","headers","url_full","get","pipe","handleError","id","t","post","JSON","stringify","put","alterar","salvar","error","errorMessage","ErrorEvent","message","status","console","log","build","XMLHttpRequest","String","FabricanteController","LoadController","loadingController","isLoading","create","dialogs_loading","cssClass","translucent","showBackdrop","spinner","keyboardClose","backdropDismiss","then","a","present","dismiss","MessageController","alertController","toastController","title","header","subHeader","buttons","alert","onDidDismiss","result","duration","toast","dialogs_confimation_title","text","dialogs_confimation_no","role","handler","blah","dialogs_confimation_yes","ProdutoCategoriaController","ProdutoController","ServicoController","UnidadeController","routes","path","component","UnidadeCadPageRoutingModule","imports","forChild","exports","UnidadeCadPageModule","declarations","UnidadeCadPage","createFormFields","hideLoading","initForm","showFocus","isAlterForm","entity","form","nome","required","sigla","descricao","validForm","showLoading","formToEntity","unidadeController","salvarOuAlterar","subscribe","data","messageController","showMessageToast","messages","dialogs_register_save","navigatePostParams","entityIndex","setTimeout","inputNome","setFocus","toLocaleUpperCase","selector","template"],"mappings":"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","file":"pages-cadastro-unidade-unidade-cad-unidade-cad-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>{{messages.unidade_cad_title}}</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"submitForm()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.unidade_cad_field_label_nome}}</ion-label>\\n                    <ion-input formControlName=\\\"nome\\\" #inputNome [attr.maxLength]=\\\"entity.nome_length\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div *ngIf=\\\"isSubmitted && errorControl.nome.errors?.required\\\" class=\\\"error-message\\\">\\n                    {{ messages.field_required }}\\n                </div>\\n\\n            </ion-col>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.unidade_cad_field_label_sigla}}</ion-label>\\n                    <ion-input  formControlName=\\\"sigla\\\"  class=\\\"upper-case\\\" [attr.maxLength]=\\\"entity.sigla_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div *ngIf=\\\"isSubmitted && errorControl.sigla.errors?.required\\\" class=\\\"error-message\\\">\\n                    {{ messages.field_required }}\\n                </div>\\n\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.unidade_cad_field_label_descricao}}</ion-label>\\n                    <ion-input formControlName=\\\"descricao\\\"  [attr.maxLength]=\\\"entity.descricao_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n    </form>\\n</ion-content>\";","\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Cliente } from '../entity/Cliente';\r\nimport { Controller } from '../controller/Controller';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ClienteController extends Controller<Cliente>{\r\n\r\n    constructor() {\r\n        super('/clientes');\r\n    }\r\n\r\n}\r\n","\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpXhrBackend } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Entity } from '../entity/Entity';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Controller<T> {\r\n\r\n    /** URL API */\r\n    public url_base = 'http://api-geatec-com-br.umbler.net';\r\n    private url_full;\r\n\r\n    /** HTTP  */\r\n    public http = this.getHttpClient();\r\n    public httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    }\r\n\r\n    constructor(urlClass: String) {\r\n        this.url_full = this.url_base + urlClass;\r\n    }\r\n\r\n    public buscarTodos(): Observable<T[]> {\r\n    \r\n        return this.http.get<T[]>(this.url_full)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError))\r\n    }\r\n\r\n    buscarPorId(id: number): Observable<T> {\r\n        return this.http.get<T>(this.url_full + '/' + id)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    salvar(t: T): Observable<T> {\r\n        return this.http.post<T>(this.url_full, JSON.stringify(t), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    alterar(t: T): Observable<T> {\r\n        return this.http.put<T>(this.url_full, JSON.stringify(t), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    salvarOuAlterar(t): Observable<T> {\r\n        if (t.id) {\r\n            return this.alterar(t);\r\n        } else {\r\n            return this.salvar(t);\r\n        }\r\n    }\r\n\r\n    excluir(t): any {\r\n        return this.http.delete<T>(this.url_full + '/' + t.id, this.httpOptions)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n\r\n\r\n    // Manipulação de erros\r\n    handleError(error: HttpErrorResponse) {\r\n        let errorMessage = '';\r\n        if (error.error instanceof ErrorEvent) {\r\n            // Erro ocorreu no lado do client\r\n            errorMessage = error.error.message;\r\n        } else {\r\n            // Erro ocorreu no lado do servidor\r\n            errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\r\n        }\r\n        console.log(errorMessage);\r\n        return throwError(errorMessage);\r\n    };\r\n\r\n    getHttpClient() {\r\n        return new HttpClient(new HttpXhrBackend({ build: () => new XMLHttpRequest() }));\r\n    }\r\n\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Fabricante } from '../entity/Fabricante';\r\nimport { Controller } from './Controller';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FabricanteController extends Controller<Fabricante> {\r\n\r\n    constructor() {\r\n        super('/fabricantes');\r\n    }\r\n\r\n}\r\n","/* import { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoadController {\r\n\r\n    constructor(private loadingController: LoadingController) { }\r\n\r\n    async showLoading(message: string = null, duration: number = null) {\r\n        const loading = await this.loadingController.create(\r\n            { message, duration, translucent: true, cssClass: \"load-controller\",backdropDismiss: true });\r\n        return await loading.present();\r\n    }\r\n\r\n    async hideLoading() {\r\n        this.loadingController.dismiss();\r\n        /*  setTimeout(() => {\r\n            this.loadingController.dismiss();\r\n         }, 500); */\r\n\r\n\r\n\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\nimport { Messages } from '../constants/Messages';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoadController {\r\n\r\n    isLoading = false;\r\n\r\n    constructor(public loadingController: LoadingController) { }\r\n\r\n    async showLoading() {\r\n        this.isLoading = true;\r\n\r\n\r\n        return await this.loadingController.create({\r\n\r\n            message: Messages.dialogs_loading,\r\n            cssClass: 'load-controller',\r\n            translucent: false,\r\n            showBackdrop: false,\r\n            spinner:\"dots\",\r\n            keyboardClose: true,\r\n            backdropDismiss: false\r\n\r\n        }).then(a => {\r\n            a.present().then(() => {\r\n                if (!this.isLoading) {\r\n                    a.dismiss().then(() => console.log('abort presenting'));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    async hideLoading() {\r\n        this.isLoading = false;\r\n        return await this.loadingController.dismiss().then(() => console.log('dismissed'));\r\n    }\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { AlertController, ToastController } from '@ionic/angular';\r\nimport { Messages } from '../constants/Messages';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MessageController {\r\n\r\n\r\n    constructor(public alertController: AlertController,\r\n        public toastController: ToastController) {\r\n    }\r\n\r\n    async showMessage(title: string, message: string) {\r\n        const alert = await this.alertController.create({\r\n            header: title,\r\n            subHeader: '',\r\n            message: message,\r\n            buttons: ['OK'],\r\n        });\r\n\r\n        await alert.present();\r\n        let result = await alert.onDidDismiss();\r\n        console.log(result);\r\n    }\r\n\r\n    async showMessageToast(message: string) {\r\n        const toast = await this.toastController.create({\r\n            message: message,\r\n            duration: 2000,\r\n            cssClass: 'toast-message'\r\n        });\r\n        toast.present();\r\n    }\r\n\r\n    async showMessageConfirm(message: string) {\r\n        let result = false;\r\n        const alert = await this.alertController.create({\r\n          cssClass: 'my-custom-class',\r\n          header: Messages.dialogs_confimation_title,\r\n          message: message,\r\n          buttons: [\r\n            {\r\n              text: Messages.dialogs_confimation_no,\r\n              role: 'cancel',\r\n              cssClass: 'secondary',\r\n              handler: (blah) => {\r\n                result = false;\r\n              }\r\n            }, {\r\n              text: Messages.dialogs_confimation_yes,\r\n              handler: () => {\r\n                result = true;\r\n              }\r\n            }\r\n          ]\r\n        });\r\n    \r\n       await alert.present();\r\n       await alert.onDidDismiss();  \r\n       return result;\r\n      }\r\n    \r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Unidade } from '../entity/Unidade';\r\nimport { Controller } from './Controller';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProdutoCategoriaController extends Controller<Unidade> {\r\n\r\n    constructor() {\r\n        super('/produtos-categorias');\r\n    }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Produto } from '../entity/Produto';\r\nimport { Controller } from './Controller'; \r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProdutoController extends Controller<Produto> {\r\n\r\n    constructor() {\r\n        super('/produtos');\r\n    }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Servico } from '../entity/Servico';\r\nimport { Controller } from './Controller';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ServicoController extends Controller<Servico> {\r\n\r\n    constructor() {\r\n        super('/servicos');\r\n    }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Unidade } from '../entity/Unidade';\r\nimport { Controller } from './Controller';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UnidadeController extends Controller<Unidade> {\r\n\r\n    constructor() {\r\n        super('/unidades');\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UnidadeCadPage } from './unidade-cad.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UnidadeCadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UnidadeCadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UnidadeCadPageRoutingModule } from './unidade-cad-routing.module';\n\nimport { UnidadeCadPage } from './unidade-cad.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UnidadeCadPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [UnidadeCadPage]\n})\nexport class UnidadeCadPageModule {}\n","import { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GenericCadPage } from '../../generic/generic-cad/generic-cad.page';\nimport { IonInput } from '@ionic/angular';\nimport { UtilValidators } from 'src/app/utils/UtilValidators';\nimport { Unidade } from 'src/app/entity/Unidade';\n\n@Component({\n    selector: 'app-unidade-cad',\n    templateUrl: './unidade-cad.page.html'\n})\nexport class UnidadeCadPage extends GenericCadPage implements OnInit {\n\n    @ViewChild('inputNome', { static: false }) inputNome: IonInput;\n\n    ngOnInit() {\n        this.createFormFields();\n    }\n\n    ionViewWillEnter() {\n        this.hideLoading();\n        this.initForm();\n    }\n\n    ionViewDidEnter() {\n        this.showFocus();\n    }\n\n    initForm() {\n        if (!this.isAlterForm()) {\n            this.entity = new Unidade();\n        }\n    }\n\n    createFormFields() {\n        this.form = new FormGroup({\n            nome: new FormControl(this.entity.nome, [Validators.required]),\n            sigla: new FormControl(this.entity.sigla, [Validators.required]),\n            descricao: new FormControl(this.entity.descricao,),\n        });\n    }\n\n    async submitForm() {\n        if (this.validForm()) {\n            this.showLoading();\n            this.entity = this.formToEntity();\n            this.unidadeController.salvarOuAlterar(this.entity).subscribe(data => {\n                if (!this.entity.id) this.entity.id = data.id;\n                this.messageController.showMessageToast(this.messages.dialogs_register_save);\n                this.navigatePostParams('unidade-list', this.entity, this.entityIndex);\n                this.hideLoading();\n            });\n        }\n    }\n\n    showFocus() {\n        setTimeout(() => this.inputNome.setFocus(), 400);\n    }\n\n    formToEntity() {\n        this.entity.sigla = (this.entity.sigla + '').toLocaleUpperCase();\n        return this.entity;\n    }\n    \n\n\n\n}\n"]}