{"version":3,"sources":["webpack:///src/app/pages/cadastro/cliente/cliente-cad/cliente-cad.page.html","webpack:///src/app/entity/Cliente.ts","webpack:///src/app/pages/cadastro/cliente/cliente-cad/cliente-cad-routing.module.ts","webpack:///src/app/pages/cadastro/cliente/cliente-cad/cliente-cad.module.ts","webpack:///src/app/pages/cadastro/cliente/cliente-cad/cliente-cad.page.ts","webpack:///src/app/utils/UtilValidators.ts"],"names":["Cliente","nome_length","endereco_length","cidade_length","uf_length","cep_length","cpf_length","cnpj_length","razaoSocial_length","fantasia_length","telefone_length","celular_length","email_length","complemento_length","routes","path","component","ClienteCadPageRoutingModule","imports","forChild","exports","ClienteCadPageModule","declarations","ClienteCadPage","isPessoaJuridica","isShowTabPessoaFisica","isShowTabPessoaJuridica","createFormFields","hideLoading","initForm","showFocus","isAlterCad","entity","form","nome","required","razaoSocial","cpf","compose","ValidaCpf","cnpj","fantasia","inscricaoEstadual","endereco","cidade","uf","cep","telefone","celular","email","complemento","configValidations","validForm","showLoading","clearEntity","clienteController","salvarOuAlterar","subscribe","data","id","messageController","showMessageToast","messages","dialogs_register_save","navigatePostParams","entityIndex","event","setTimeout","inputRazaoSocial","setFocus","inputNome","addValidation","removeValidation","selector","template","UtilValidators","controle","value","split","join","numbers","digits","sum","i","result","equalDigits","length","cpfNotValid","charAt","substring","Number"],"mappings":"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","file":"pages-cadastro-cliente-cliente-cad-cliente-cad-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>{{messages.cliente_cad_title}}</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"submitForm()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n\\n\\n<ion-content padding>\\n\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n        <ion-row>\\n            <ion-col>\\n                <ion-segment formControlName=\\\"isPessoaJuridica\\\" (ionChange)=\\\"selectTipoPessoa($event)\\\">\\n                    <ion-segment-button value=\\\"false\\\"  *ngIf=\\\"isShowTabPessoaFisica\\\">\\n                        <ion-icon name=\\\"person\\\"></ion-icon>\\n                        <ion-label class=\\\"text-no-transformer\\\">{{messages.cliente_cad_tab_pessoa_fisica_title}}\\n                        </ion-label>\\n                    </ion-segment-button>\\n                    <ion-segment-button value=\\\"true\\\" *ngIf=\\\"isShowTabPessoaJuridica\\\">\\n                        <ion-icon name=\\\"business\\\"></ion-icon>\\n                        <ion-label class=\\\"text-no-transformer\\\">{{messages.cliente_cad_tab_pessoa_juridica_title}}\\n                        </ion-label>\\n                    </ion-segment-button>\\n                </ion-segment>\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <div *ngIf=\\\"!isPessoaJuridica\\\">\\n\\n                    <ion-item lines=\\\"full\\\">\\n                        <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_nome}}</ion-label>\\n                        <ion-input formControlName=\\\"nome\\\" #inputNome [attr.maxLength]=\\\"entity.nome_length\\\"></ion-input>\\n                    </ion-item>\\n\\n                    <!-- Error messages -->\\n                    <div *ngIf=\\\"isSubmitted && errorControl.nome.errors?.required\\\" class=\\\"error-message\\\">\\n                        {{ messages.field_required }}\\n                    </div>\\n\\n                </div>\\n\\n                <div *ngIf=\\\"isPessoaJuridica\\\">\\n\\n                    <ion-item lines=\\\"full\\\">\\n                        <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_razao_social}}</ion-label>\\n                        <ion-input formControlName=\\\"razaoSocial\\\" #inputRazaoSocial\\n                            [attr.maxLength]=\\\"entity.razaoSocial_length\\\"></ion-input>\\n                    </ion-item>\\n\\n                    <!-- Error messages -->\\n                    <div *ngIf=\\\"isSubmitted && errorControl.razaoSocial.errors?.required\\\" class=\\\"error-message\\\">\\n                        {{ messages.field_required }}\\n                    </div>\\n                </div>\\n\\n            </ion-col>\\n\\n            <ion-col *ngIf=\\\"!isPessoaJuridica\\\">\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_cpf}}</ion-label>\\n                    <ion-input formControlName=\\\"cpf\\\" simpleMask=\\\"999.999.999-99\\\" class=\\\"uppercase\\\"></ion-input>\\n                </ion-item>\\n\\n                <div *ngIf=\\\"isSubmitted && errorControl.cpf.errors?.cpfNotValid\\\" class=\\\"error-message\\\">\\n                    {{ messages.cpf_invalid }}\\n                </div>\\n            </ion-col>\\n\\n            <ion-col *ngIf=\\\"isPessoaJuridica\\\">\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_cnpj}}</ion-label>\\n                    <ion-input formControlName=\\\"cnpj\\\" simpleMask=\\\"99.999.999/9999-99\\\" [clearIfNotMatch]=\\\"true\\\"\\n                        class=\\\"uppercase\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div *ngIf=\\\"isSubmitted && errorControl.cnpj.errors?.required\\\" class=\\\"error-message\\\">\\n                    {{ messages.field_required }}\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row *ngIf=\\\"isPessoaJuridica\\\">\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_fantasia}}\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"fantasia\\\" [attr.maxLength]=\\\"entity.fantasia_length\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">\\n                        {{messages.cliente_cad_field_label_inscricao_estadual}}</ion-label>\\n                    <ion-input formControlName=\\\"inscricaoEstadual\\\" [attr.maxLength]=\\\"entity.inscricaoEstadual_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_endereco}}\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"endereco\\\" [attr.maxLength]=\\\"entity.endereco_length\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_cidade}}\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"cidade\\\" [attr.maxLength]=\\\"entity.cidade_length\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col size=\\\"3\\\">\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_uf}}</ion-label>\\n                    <ion-select formControlName=\\\"uf\\\">\\n                        <ion-select-option *ngFor=\\\"let item of listUf\\\" value=\\\"{{item.uf}}\\\">\\n                            {{ item.uf }}\\n                        </ion-select-option>\\n                    </ion-select>\\n\\n                </ion-item>\\n            </ion-col>\\n            <ion-col>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_cep}}</ion-label>\\n                    <ion-input formControlName=\\\"cep\\\" simpleMask=\\\"99.999-999\\\" [clearIfNotMatch]=\\\"true\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_complemento}}</ion-label>\\n                    <ion-input formControlName=\\\"complemento\\\" [attr.maxLength]=\\\"entity.complemento_length\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_telefone}}</ion-label>\\n                    <ion-input formControlName=\\\"telefone\\\" simpleMask=\\\"(99) 99999-9999\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n            <ion-col>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_celular}}</ion-label>\\n                    <ion-input formControlName=\\\"celular\\\" simpleMask=\\\"(99) 99999-9999\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_email}}</ion-label>\\n                    <ion-input formControlName=\\\"email\\\" [attr.maxLength]=\\\"entity.email_length\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n    </form>\\n\\n</ion-content>\";","import { Entity } from \"./Entity\";\r\n\r\nexport class Cliente extends Entity {\r\n\r\n   \r\n    nome: string;\r\n    endereco: string;\r\n    cidade: string;\r\n    uf: string;\r\n    cep: string;\r\n    cpf: string;\r\n    cnpj: string;\r\n    razaoSocial: string;\r\n    fantasia: string;\r\n    telefone: string;\r\n    celular: string;\r\n    email: string;\r\n    complemento: string;\r\n    isPessoaJuridica: boolean;\r\n    criadoEm: string;\r\n    atualizadoEm: string;\r\n\r\n    /**  FIELDS LENGTH's */\r\n    public readonly nome_length = 100;\r\n    public readonly endereco_length = 150;\r\n    public readonly cidade_length = 30;\r\n    public readonly uf_length = 2;\r\n    public readonly cep_length = 10;\r\n    public readonly cpf_length = 14;\r\n    public readonly cnpj_length = 18;\r\n    public readonly razaoSocial_length = 100;\r\n    public readonly fantasia_length = 100;\r\n    public readonly telefone_length = 15;\r\n    public readonly celular_length = 15;\r\n    public readonly email_length = 100;\r\n    public readonly complemento_length = 100; \r\n    \r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ClienteCadPage } from './cliente-cad.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClienteCadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClienteCadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ClienteCadPageRoutingModule } from './cliente-cad-routing.module';\n\nimport { ClienteCadPage } from './cliente-cad.page';\nimport { SimpleMaskModule } from 'ngx-ion-simple-mask';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ClienteCadPageRoutingModule,\n    ReactiveFormsModule,\n    SimpleMaskModule\n  ],\n  declarations: [ClienteCadPage]\n})\nexport class ClienteCadPageModule {}\n","import { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GenericCadPage } from '../../generic/generic-cad/generic-cad.page';\nimport { IonInput } from '@ionic/angular';\nimport { UtilValidators } from 'src/app/utils/UtilValidators';\nimport { Cliente } from 'src/app/entity/Cliente';\n\n@Component({\n    selector: 'app-cliente-cad',\n    templateUrl: './cliente-cad.page.html'\n})\nexport class ClienteCadPage extends GenericCadPage implements OnInit {\n\n    @ViewChild('inputNome', { static: false }) inputNome: IonInput;\n    @ViewChild('inputRazaoSocial', { static: false }) inputRazaoSocial: IonInput;\n\n    isPessoaJuridica: boolean = false;\n    isShowTabPessoaFisica = true;\n    isShowTabPessoaJuridica = true;\n\n\n    ngOnInit() {\n        this.createFormFields();\n    }\n\n    ionViewWillEnter() {\n        this.hideLoading();\n        this.initForm();\n    }\n\n    ionViewDidEnter() {\n        this.showFocus();\n    }\n\n    initForm() {\n\n        /** ALTERAR */\n        if (this.isAlterCad()) {\n            this.isPessoaJuridica = this.entity.isPessoaJuridica;\n\n            /** Ocultar Tab por tipo de pessoa  */\n            this.isShowTabPessoaJuridica = this.isPessoaJuridica;\n            this.isShowTabPessoaFisica = !this.isPessoaJuridica;\n\n        } else {\n            this.entity = new Cliente();\n        }\n    }\n\n    createFormFields() {\n\n        this.form = new FormGroup({\n            nome: new FormControl(this.entity.nome, [Validators.required]),\n            razaoSocial: new FormControl(this.entity.razaoSocial, [Validators.required]),\n            cpf: new FormControl(this.entity.cpf, Validators.compose([Validators.required, UtilValidators.ValidaCpf])),\n            cnpj: new FormControl(this.entity.cnpj, [Validators.required]),\n            fantasia: new FormControl(this.entity.fantasia,),\n            inscricaoEstadual: new FormControl(this.entity.inscricaoEstadual),\n            endereco: new FormControl(this.entity.endereco),\n            cidade: new FormControl(this.entity.cidade),\n            uf: new FormControl(this.entity.uf),\n            cep: new FormControl(this.entity.cep),\n            telefone: new FormControl(this.entity.telefone),\n            celular: new FormControl(this.entity.celular),\n            email: new FormControl(this.entity.email),\n            complemento: new FormControl(this.entity.complemento),\n            isPessoaJuridica: new FormControl(this.isPessoaJuridica)\n        });\n    }\n\n    async submitForm() {\n\n        this.configValidations();\n        if (this.validForm()) {\n            this.showLoading();\n\n            /** PJ OU PF */\n            this.entity.isPessoaJuridica = this.isPessoaJuridica;\n            this.clearEntity();\n\n            this.clienteController.salvarOuAlterar(this.entity).subscribe(data => {\n\n                // NOVO REGISTRO//\n                if (!this.entity.id) this.entity.id = data.id;\n                this.messageController.showMessageToast(this.messages.dialogs_register_save);\n                this.navigatePostParams('cliente-list', this.entity, this.entityIndex);\n                this.hideLoading();\n            });\n        }\n    }\n\n\n    selectTipoPessoa(event: any) {\n        this.isPessoaJuridica = !this.isPessoaJuridica;\n        this.showFocus();\n    }\n\n    showFocus() {\n        if (this.isPessoaJuridica) {\n            setTimeout(() => this.inputRazaoSocial.setFocus(), 400);\n        } else {\n            setTimeout(() => this.inputNome.setFocus(), 400);\n        }\n    }\n\n    async clearEntity() {\n        if (this.isPessoaJuridica) {\n            this.entity.nome = null;\n            this.entity.cpf = null;\n        } else {\n            this.entity.razaoSocial = null;\n            this.entity.fantasia = null;\n            this.entity.inscricaoEstadual = null;\n            this.entity.cnpj = null;\n        }\n    }\n\n    configValidations() {\n        if (this.isPessoaJuridica) {\n            this.addValidation('razaoSocial', Validators.compose([Validators.required]));\n            this.addValidation('cnpj', Validators.compose([Validators.required]));\n            this.removeValidation('nome');\n            this.removeValidation('cpf');\n        } else {\n            this.addValidation('nome', Validators.compose([Validators.required]));\n            this.addValidation('cpf', Validators.compose([Validators.required, UtilValidators.ValidaCpf]));\n            this.removeValidation('razaoSocial');\n            this.removeValidation('cnpj');\n        }\n    }\n}\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nexport class UtilValidators {\r\n    constructor() { }\r\n\r\n    static ValidaCpf(controle: AbstractControl) {\r\n        let cpf = controle.value + '';\r\n        cpf = cpf.split('.').join('');\r\n        cpf = cpf.split('-').join('');\r\n        \r\n      \r\n        if (cpf) {\r\n          let numbers, digits, sum, i, result, equalDigits;\r\n          equalDigits = 1;\r\n          if (cpf.length < 11) {\r\n           return {cpfNotValid: true };\r\n          }\r\n \r\n          for (i = 0; i < cpf.length - 1; i++) {\r\n            if (cpf.charAt(i) !== cpf.charAt(i + 1)) {\r\n              equalDigits = 0;\r\n              break;\r\n            }\r\n          }\r\n \r\n          if (!equalDigits) {\r\n            numbers = cpf.substring(0, 9);\r\n            digits = cpf.substring(9);\r\n            sum = 0;\r\n            for (i = 10; i > 1; i--) {\r\n              sum += numbers.charAt(10 - i) * i;\r\n            }\r\n \r\n            result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\r\n \r\n            if (result !== Number(digits.charAt(0))) {\r\n              return { cpfNotValid: true };\r\n            }\r\n            numbers = cpf.substring(0, 10);\r\n            sum = 0;\r\n \r\n            for (i = 11; i > 1; i--) {\r\n              sum += numbers.charAt(11 - i) * i;\r\n            }\r\n            result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\r\n \r\n            if (result !== Number(digits.charAt(1))) {\r\n              return { cpfNotValid: true };\r\n            }\r\n            return null;\r\n          } else {\r\n            return { cpfNotValid: true };\r\n          }\r\n       }\r\n     return null;\r\n   };\r\n\r\n}"]}