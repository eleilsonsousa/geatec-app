{"version":3,"sources":["webpack:///src/app/pages/cadastro/cliente/cliente-cad/cliente-cad.page.html","webpack:///src/app/pages/cadastro/generic/generic-cad/generic-cad.page.html","webpack:///src/app/constants/Constants.ts","webpack:///src/app/controller/ClienteController.ts","webpack:///src/app/controller/Controller.ts","webpack:///src/app/controller/FabricanteController.ts","webpack:///src/app/controller/LoadController.ts","webpack:///src/app/controller/MessageController.ts","webpack:///src/app/controller/ProdutoCategoriaController.ts","webpack:///src/app/controller/ProdutoController.ts","webpack:///src/app/controller/ServicoController.ts","webpack:///src/app/controller/UnidadeController.ts","webpack:///src/app/entity/Cliente.ts","webpack:///src/app/entity/Entity.ts","webpack:///src/app/pages/cadastro/cliente/cliente-cad/cliente-cad-routing.module.ts","webpack:///src/app/pages/cadastro/cliente/cliente-cad/cliente-cad.module.ts","webpack:///src/app/pages/cadastro/cliente/cliente-cad/cliente-cad.page.ts","webpack:///src/app/pages/cadastro/generic/generic-cad/generic-cad.page.ts","webpack:///src/app/utils/UtilValidators.ts"],"names":["Constants","UFS","codigo_uf","uf","nome","ClienteController","providedIn","Controller","urlClass","url_base","http","getHttpClient","httpOptions","headers","url_full","get","pipe","handleError","id","t","post","JSON","stringify","put","alterar","salvar","error","errorMessage","ErrorEvent","message","status","console","log","build","XMLHttpRequest","String","FabricanteController","LoadController","loadingController","isLoading","create","dialogs_loading","cssClass","translucent","showBackdrop","spinner","keyboardClose","backdropDismiss","then","a","present","dismiss","MessageController","alertController","toastController","title","header","subHeader","buttons","alert","onDidDismiss","result","duration","toast","dialogs_confimation_title","text","dialogs_confimation_no","role","handler","blah","dialogs_confimation_yes","ProdutoCategoriaController","ProdutoController","ServicoController","UnidadeController","Cliente","nome_length","endereco_length","cidade_length","uf_length","cep_length","cpf_length","cnpj_length","razaoSocial_length","fantasia_length","telefone_length","celular_length","email_length","complemento_length","Entity","json","Object","assign","routes","path","component","ClienteCadPageRoutingModule","imports","forChild","exports","ClienteCadPageModule","declarations","ClienteCadPage","isPessoaJuridica","isShowTabPessoaFisica","isShowTabPessoaJuridica","createFormFields","hideLoading","initForm","showFocus","isAlterForm","entity","form","required","razaoSocial","cpf","compose","ValidaCpf","cnpj","fantasia","inscricaoEstadual","endereco","cidade","cep","telefone","celular","email","complemento","configValidations","validForm","showLoading","clearEntity","clienteController","salvarOuAlterar","subscribe","data","messageController","showMessageToast","messages","dialogs_register_save","navigatePostParams","entityIndex","event","setTimeout","inputRazaoSocial","setFocus","inputNome","addValidation","removeValidation","selector","template","GenericCadPage","unidadeController","produtoCategoriaController","fabricanteController","servicoController","produtoController","navCtrl","router","currencyPipe","routerActive","isSubmitted","isSaveAndBack","listUf","navigateGetParams","valid","value","back","inputFocusInit","url","index","navigationExtras","state","postParams","navigate","params","getNav","getCurrentNavigation","extras","navigateForward","nameField","clearValidators","updateValueAndValidity","validatiors","setValidators","controls","UtilValidators","controle","split","join","numbers","digits","sum","i","equalDigits","length","cpfNotValid","charAt","substring","Number"],"mappings":"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","file":"pages-cadastro-cliente-cliente-cad-cliente-cad-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>{{messages.cliente_cad_title}}</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"submitForm()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n\\n\\n<ion-content padding>\\n\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n        <ion-row>\\n            <ion-col>\\n                <ion-segment formControlName=\\\"isPessoaJuridica\\\" (ionChange)=\\\"selectTipoPessoa($event)\\\">\\n                    <ion-segment-button value=\\\"false\\\"  *ngIf=\\\"isShowTabPessoaFisica\\\">\\n                        <ion-icon name=\\\"person\\\"></ion-icon>\\n                        <ion-label class=\\\"text-no-transformer\\\">{{messages.cliente_cad_tab_pessoa_fisica_title}}\\n                        </ion-label>\\n                    </ion-segment-button>\\n                    <ion-segment-button value=\\\"true\\\" *ngIf=\\\"isShowTabPessoaJuridica\\\">\\n                        <ion-icon name=\\\"business\\\"></ion-icon>\\n                        <ion-label class=\\\"text-no-transformer\\\">{{messages.cliente_cad_tab_pessoa_juridica_title}}\\n                        </ion-label>\\n                    </ion-segment-button>\\n                </ion-segment>\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <div *ngIf=\\\"!isPessoaJuridica\\\">\\n\\n                    <ion-item lines=\\\"full\\\">\\n                        <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_nome}}</ion-label>\\n                        <ion-input formControlName=\\\"nome\\\" #inputNome [attr.maxLength]=\\\"entity.nome_length\\\"></ion-input>\\n                    </ion-item>\\n\\n                    <!-- Error messages -->\\n                    <div *ngIf=\\\"isSubmitted && errorControl.nome.errors?.required\\\" class=\\\"error-message\\\">\\n                        {{ messages.field_required }}\\n                    </div>\\n\\n                </div>\\n\\n                <div *ngIf=\\\"isPessoaJuridica\\\">\\n\\n                    <ion-item lines=\\\"full\\\">\\n                        <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_razao_social}}</ion-label>\\n                        <ion-input formControlName=\\\"razaoSocial\\\" #inputRazaoSocial\\n                            [attr.maxLength]=\\\"entity.razaoSocial_length\\\"></ion-input>\\n                    </ion-item>\\n\\n                    <!-- Error messages -->\\n                    <div *ngIf=\\\"isSubmitted && errorControl.razaoSocial.errors?.required\\\" class=\\\"error-message\\\">\\n                        {{ messages.field_required }}\\n                    </div>\\n                </div>\\n\\n            </ion-col>\\n\\n            <ion-col *ngIf=\\\"!isPessoaJuridica\\\">\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_cpf}}</ion-label>\\n                    <ion-input formControlName=\\\"cpf\\\" simpleMask=\\\"999.999.999-99\\\" class=\\\"uppercase\\\"></ion-input>\\n                </ion-item>\\n\\n                <div *ngIf=\\\"isSubmitted && errorControl.cpf.errors?.cpfNotValid\\\" class=\\\"error-message\\\">\\n                    {{ messages.cpf_invalid }}\\n                </div>\\n            </ion-col>\\n\\n            <ion-col *ngIf=\\\"isPessoaJuridica\\\">\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_cnpj}}</ion-label>\\n                    <ion-input formControlName=\\\"cnpj\\\" simpleMask=\\\"99.999.999/9999-99\\\" [clearIfNotMatch]=\\\"true\\\"\\n                        class=\\\"uppercase\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div *ngIf=\\\"isSubmitted && errorControl.cnpj.errors?.required\\\" class=\\\"error-message\\\">\\n                    {{ messages.field_required }}\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row *ngIf=\\\"isPessoaJuridica\\\">\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_fantasia}}\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"fantasia\\\" [attr.maxLength]=\\\"entity.fantasia_length\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">\\n                        {{messages.cliente_cad_field_label_inscricao_estadual}}</ion-label>\\n                    <ion-input formControlName=\\\"inscricaoEstadual\\\" [attr.maxLength]=\\\"entity.inscricaoEstadual_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_endereco}}\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"endereco\\\" [attr.maxLength]=\\\"entity.endereco_length\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_cidade}}\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"cidade\\\" [attr.maxLength]=\\\"entity.cidade_length\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col size=\\\"3\\\">\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_uf}}</ion-label>\\n                    <ion-select formControlName=\\\"uf\\\">\\n                        <ion-select-option *ngFor=\\\"let item of listUf\\\" value=\\\"{{item.uf}}\\\">\\n                            {{ item.uf }}\\n                        </ion-select-option>\\n                    </ion-select>\\n\\n                </ion-item>\\n            </ion-col>\\n            <ion-col>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_cep}}</ion-label>\\n                    <ion-input formControlName=\\\"cep\\\" simpleMask=\\\"99.999-999\\\" [clearIfNotMatch]=\\\"true\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_complemento}}</ion-label>\\n                    <ion-input formControlName=\\\"complemento\\\" [attr.maxLength]=\\\"entity.complemento_length\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_telefone}}</ion-label>\\n                    <ion-input formControlName=\\\"telefone\\\" simpleMask=\\\"(99) 99999-9999\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n            <ion-col>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_celular}}</ion-label>\\n                    <ion-input formControlName=\\\"celular\\\" simpleMask=\\\"(99) 99999-9999\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.cliente_cad_field_label_email}}</ion-label>\\n                    <ion-input formControlName=\\\"email\\\" [attr.maxLength]=\\\"entity.email_length\\\"></ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n    </form>\\n\\n</ion-content>\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>generic-cad</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\";","export abstract class Constants {\r\n    \r\n    static readonly UFS: any[] = [\r\n        { codigo_uf: 27, uf: 'AL', nome: 'Alagoas' },\r\n        { codigo_uf: 12, uf: 'AC', nome: 'Acre' },\r\n        { codigo_uf: 16, uf: 'AP', nome: 'Amapá' },\r\n        { codigo_uf: 13, uf: 'AM', nome: 'Amazonas' },\r\n        { codigo_uf: 29, uf: 'BA', nome: 'Bahia' },\r\n        { codigo_uf: 23, uf: 'CE', nome: 'Ceará' },\r\n        { codigo_uf: 53, uf: 'DF', nome: 'Distrito Federal' },\r\n        { codigo_uf: 32, uf: 'ES', nome: 'Espírito Santo' },\r\n        { codigo_uf: 52, uf: 'GO', nome: 'Goías' },\r\n        { codigo_uf: 21, uf: 'MA', nome: 'Maranhão' },\r\n        { codigo_uf: 51, uf: 'MT', nome: 'Mato Grosso' },\r\n        { codigo_uf: 50, uf: 'MS', nome: 'Mato G. do Sul' },\r\n        { codigo_uf: 31, uf: 'MG', nome: 'Minas Gerais' },\r\n        { codigo_uf: 15, uf: 'PA', nome: 'Pará' },\r\n        { codigo_uf: 25, uf: 'PB', nome: 'Paraíba' },\r\n        { codigo_uf: 41, uf: 'PR', nome: 'Paraná' },\r\n        { codigo_uf: 26, uf: 'PE', nome: 'Pernambuco' },\r\n        { codigo_uf: 22, uf: 'PI', nome: 'Piauí' },\r\n        { codigo_uf: 33, uf: 'RJ', nome: 'Rio de Janeiro' },\r\n        { codigo_uf: 24, uf: 'RN', nome: 'Rio G. do Norte' },\r\n        { codigo_uf: 43, uf: 'RS', nome: 'Rio G. do Sul' },\r\n        { codigo_uf: 11, uf: 'RO', nome: 'Rondônia' },\r\n        { codigo_uf: 14, uf: 'RR', nome: 'Roraíma' },\r\n        { codigo_uf: 42, uf: 'SC', nome: 'Santa Catarina' },\r\n        { codigo_uf: 35, uf: 'SP', nome: 'São Paulo' },\r\n        { codigo_uf: 28, uf: 'SE', nome: 'Sergipe' },\r\n        { codigo_uf: 17, uf: 'TO', nome: 'Tocantins' },\r\n\r\n    ];\r\n\r\n}","\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Cliente } from '../entity/Cliente';\r\nimport { Controller } from '../controller/Controller';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ClienteController extends Controller<Cliente>{\r\n\r\n    constructor() {\r\n        super('/clientes');\r\n    }\r\n\r\n}\r\n","\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpXhrBackend } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Entity } from '../entity/Entity';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Controller<T> {\r\n\r\n    /** URL API */\r\n    public url_base = 'http://api-geatec-com-br.umbler.net';\r\n    private url_full;\r\n\r\n    /** HTTP  */\r\n    public http = this.getHttpClient();\r\n    public httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    }\r\n\r\n    constructor(urlClass: String) {\r\n        this.url_full = this.url_base + urlClass;\r\n    }\r\n\r\n    public buscarTodos(): Observable<T[]> {\r\n    \r\n        return this.http.get<T[]>(this.url_full)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError))\r\n    }\r\n\r\n    buscarPorId(id: number): Observable<T> {\r\n        return this.http.get<T>(this.url_full + '/' + id)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    salvar(t: T): Observable<T> {\r\n        return this.http.post<T>(this.url_full, JSON.stringify(t), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    alterar(t: T): Observable<T> {\r\n        return this.http.put<T>(this.url_full, JSON.stringify(t), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    salvarOuAlterar(t): Observable<T> {\r\n        if (t.id) {\r\n            return this.alterar(t);\r\n        } else {\r\n            return this.salvar(t);\r\n        }\r\n    }\r\n\r\n    excluir(t): any {\r\n        return this.http.delete<T>(this.url_full + '/' + t.id, this.httpOptions)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n\r\n\r\n    // Manipulação de erros\r\n    handleError(error: HttpErrorResponse) {\r\n        let errorMessage = '';\r\n        if (error.error instanceof ErrorEvent) {\r\n            // Erro ocorreu no lado do client\r\n            errorMessage = error.error.message;\r\n        } else {\r\n            // Erro ocorreu no lado do servidor\r\n            errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\r\n        }\r\n        console.log(errorMessage);\r\n        return throwError(errorMessage);\r\n    };\r\n\r\n    getHttpClient() {\r\n        return new HttpClient(new HttpXhrBackend({ build: () => new XMLHttpRequest() }));\r\n    }\r\n\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Fabricante } from '../entity/Fabricante';\r\nimport { Controller } from './Controller';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FabricanteController extends Controller<Fabricante> {\r\n\r\n    constructor() {\r\n        super('/fabricantes');\r\n    }\r\n\r\n}\r\n","/* import { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoadController {\r\n\r\n    constructor(private loadingController: LoadingController) { }\r\n\r\n    async showLoading(message: string = null, duration: number = null) {\r\n        const loading = await this.loadingController.create(\r\n            { message, duration, translucent: true, cssClass: \"load-controller\",backdropDismiss: true });\r\n        return await loading.present();\r\n    }\r\n\r\n    async hideLoading() {\r\n        this.loadingController.dismiss();\r\n        /*  setTimeout(() => {\r\n            this.loadingController.dismiss();\r\n         }, 500); */\r\n\r\n\r\n\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\nimport { Messages } from '../constants/Messages';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoadController {\r\n\r\n    isLoading = false;\r\n\r\n    constructor(public loadingController: LoadingController) { }\r\n\r\n    async showLoading() {\r\n        this.isLoading = true;\r\n\r\n\r\n        return await this.loadingController.create({\r\n\r\n            message: Messages.dialogs_loading,\r\n            cssClass: 'load-controller',\r\n            translucent: false,\r\n            showBackdrop: false,\r\n            spinner:\"dots\",\r\n            keyboardClose: true,\r\n            backdropDismiss: false\r\n\r\n        }).then(a => {\r\n            a.present().then(() => {\r\n                if (!this.isLoading) {\r\n                    a.dismiss().then(() => console.log('abort presenting'));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    async hideLoading() {\r\n        this.isLoading = false;\r\n        return await this.loadingController.dismiss().then(() => console.log('dismissed'));\r\n    }\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { AlertController, ToastController } from '@ionic/angular';\r\nimport { Messages } from '../constants/Messages';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MessageController {\r\n\r\n\r\n    constructor(public alertController: AlertController,\r\n        public toastController: ToastController) {\r\n    }\r\n\r\n    async showMessage(title: string, message: string) {\r\n        const alert = await this.alertController.create({\r\n            header: title,\r\n            subHeader: '',\r\n            message: message,\r\n            buttons: ['OK'],\r\n        });\r\n\r\n        await alert.present();\r\n        let result = await alert.onDidDismiss();\r\n        console.log(result);\r\n    }\r\n\r\n    async showMessageToast(message: string) {\r\n        const toast = await this.toastController.create({\r\n            message: message,\r\n            duration: 2000,\r\n            cssClass: 'toast-message'\r\n        });\r\n        toast.present();\r\n    }\r\n\r\n    async showMessageConfirm(message: string) {\r\n        let result = false;\r\n        const alert = await this.alertController.create({\r\n          cssClass: 'my-custom-class',\r\n          header: Messages.dialogs_confimation_title,\r\n          message: message,\r\n          buttons: [\r\n            {\r\n              text: Messages.dialogs_confimation_no,\r\n              role: 'cancel',\r\n              cssClass: 'secondary',\r\n              handler: (blah) => {\r\n                result = false;\r\n              }\r\n            }, {\r\n              text: Messages.dialogs_confimation_yes,\r\n              handler: () => {\r\n                result = true;\r\n              }\r\n            }\r\n          ]\r\n        });\r\n    \r\n       await alert.present();\r\n       await alert.onDidDismiss();  \r\n       return result;\r\n      }\r\n    \r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Unidade } from '../entity/Unidade';\r\nimport { Controller } from './Controller';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProdutoCategoriaController extends Controller<Unidade> {\r\n\r\n    constructor() {\r\n        super('/produtos-categorias');\r\n    }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Produto } from '../entity/Produto';\r\nimport { Controller } from './Controller'; \r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProdutoController extends Controller<Produto> {\r\n\r\n    constructor() {\r\n        super('/produtos');\r\n    }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Servico } from '../entity/Servico';\r\nimport { Controller } from './Controller';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ServicoController extends Controller<Servico> {\r\n\r\n    constructor() {\r\n        super('/servicos');\r\n    }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Unidade } from '../entity/Unidade';\r\nimport { Controller } from './Controller';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UnidadeController extends Controller<Unidade> {\r\n\r\n    constructor() {\r\n        super('/unidades');\r\n    }\r\n\r\n}\r\n","import { Entity } from \"./Entity\";\r\n\r\nexport class Cliente extends Entity {\r\n\r\n   \r\n    nome: string;\r\n    endereco: string;\r\n    cidade: string;\r\n    uf: string;\r\n    cep: string;\r\n    cpf: string;\r\n    cnpj: string;\r\n    razaoSocial: string;\r\n    fantasia: string;\r\n    telefone: string;\r\n    celular: string;\r\n    email: string;\r\n    complemento: string;\r\n    isPessoaJuridica: boolean;\r\n    criadoEm: string;\r\n    atualizadoEm: string;\r\n\r\n    /**  FIELDS LENGTH's */\r\n    public readonly nome_length = 100;\r\n    public readonly endereco_length = 150;\r\n    public readonly cidade_length = 30;\r\n    public readonly uf_length = 2;\r\n    public readonly cep_length = 10;\r\n    public readonly cpf_length = 14;\r\n    public readonly cnpj_length = 18;\r\n    public readonly razaoSocial_length = 100;\r\n    public readonly fantasia_length = 100;\r\n    public readonly telefone_length = 15;\r\n    public readonly celular_length = 15;\r\n    public readonly email_length = 100;\r\n    public readonly complemento_length = 100; \r\n    \r\n}\r\n","\r\nexport class Entity {\r\n\r\n    public id: number;\r\n    public url_base = 'http://api-geatec-com-br.umbler.net';\r\n\r\n    public toObject(json) {\r\n       return Object.assign(json , this);\r\n    }\r\n   \r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ClienteCadPage } from './cliente-cad.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClienteCadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClienteCadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ClienteCadPageRoutingModule } from './cliente-cad-routing.module';\n\nimport { ClienteCadPage } from './cliente-cad.page';\nimport { SimpleMaskModule } from 'ngx-ion-simple-mask';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ClienteCadPageRoutingModule,\n    ReactiveFormsModule,\n    SimpleMaskModule\n  ],\n  declarations: [ClienteCadPage]\n})\nexport class ClienteCadPageModule {}\n","import { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GenericCadPage } from '../../generic/generic-cad/generic-cad.page';\nimport { IonInput } from '@ionic/angular';\nimport { UtilValidators } from 'src/app/utils/UtilValidators';\nimport { Cliente } from 'src/app/entity/Cliente';\n\n@Component({\n    selector: 'app-cliente-cad',\n    templateUrl: './cliente-cad.page.html'\n})\nexport class ClienteCadPage extends GenericCadPage implements OnInit {\n\n    @ViewChild('inputNome', { static: false }) inputNome: IonInput;\n    @ViewChild('inputRazaoSocial', { static: false }) inputRazaoSocial: IonInput;\n\n    isPessoaJuridica: boolean = false;\n    isShowTabPessoaFisica = true;\n    isShowTabPessoaJuridica = true;\n\n\n    ngOnInit() {\n        this.createFormFields();\n    }\n\n    ionViewWillEnter() {\n        this.hideLoading();\n        this.initForm();\n    }\n\n    ionViewDidEnter() {\n        this.showFocus();\n    }\n\n    initForm() {\n\n        /** ALTERAR */\n        if (this.isAlterForm()) {\n            this.isPessoaJuridica = this.entity.isPessoaJuridica;\n\n            /** Ocultar Tab por tipo de pessoa  */\n            this.isShowTabPessoaJuridica = this.isPessoaJuridica;\n            this.isShowTabPessoaFisica = !this.isPessoaJuridica;\n\n        } else {\n            this.entity = new Cliente();\n        }\n    }\n\n    createFormFields() {\n\n        this.form = new FormGroup({\n            nome: new FormControl(this.entity.nome, [Validators.required]),\n            razaoSocial: new FormControl(this.entity.razaoSocial, [Validators.required]),\n            cpf: new FormControl(this.entity.cpf, Validators.compose([Validators.required, UtilValidators.ValidaCpf])),\n            cnpj: new FormControl(this.entity.cnpj, [Validators.required]),\n            fantasia: new FormControl(this.entity.fantasia,),\n            inscricaoEstadual: new FormControl(this.entity.inscricaoEstadual),\n            endereco: new FormControl(this.entity.endereco),\n            cidade: new FormControl(this.entity.cidade),\n            uf: new FormControl(this.entity.uf),\n            cep: new FormControl(this.entity.cep),\n            telefone: new FormControl(this.entity.telefone),\n            celular: new FormControl(this.entity.celular),\n            email: new FormControl(this.entity.email),\n            complemento: new FormControl(this.entity.complemento),\n            isPessoaJuridica: new FormControl(this.isPessoaJuridica)\n        });\n    }\n\n    async submitForm() {\n\n        this.configValidations();\n        if (this.validForm()) {\n            this.showLoading();\n\n            /** PJ OU PF */\n            this.entity.isPessoaJuridica = this.isPessoaJuridica;\n            this.clearEntity();\n\n            this.clienteController.salvarOuAlterar(this.entity).subscribe(data => {\n\n                // NOVO REGISTRO//\n                if (!this.entity.id) this.entity.id = data.id;\n                this.messageController.showMessageToast(this.messages.dialogs_register_save);\n                this.navigatePostParams('cliente-list', this.entity, this.entityIndex);\n                this.hideLoading();\n            });\n        }\n    }\n\n\n    selectTipoPessoa(event: any) {\n        this.isPessoaJuridica = !this.isPessoaJuridica;\n        this.showFocus();\n    }\n\n    showFocus() {\n        if (this.isPessoaJuridica) {\n            setTimeout(() => this.inputRazaoSocial.setFocus(), 400);\n        } else {\n            setTimeout(() => this.inputNome.setFocus(), 400);\n        }\n    }\n\n    async clearEntity() {\n        if (this.isPessoaJuridica) {\n            this.entity.nome = null;\n            this.entity.cpf = null;\n        } else {\n            this.entity.razaoSocial = null;\n            this.entity.fantasia = null;\n            this.entity.inscricaoEstadual = null;\n            this.entity.cnpj = null;\n        }\n    }\n\n    configValidations() {\n        if (this.isPessoaJuridica) {\n            this.addValidation('razaoSocial', Validators.compose([Validators.required]));\n            this.addValidation('cnpj', Validators.compose([Validators.required]));\n            this.removeValidation('nome');\n            this.removeValidation('cpf');\n        } else {\n            this.addValidation('nome', Validators.compose([Validators.required]));\n            this.addValidation('cpf', Validators.compose([Validators.required, UtilValidators.ValidaCpf]));\n            this.removeValidation('razaoSocial');\n            this.removeValidation('cnpj');\n        }\n    }\n}\n","//import { CurrencyPipe } from '@angular/common';\nimport { CurrencyPipe } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { IonInput, NavController, ToastController } from '@ionic/angular';\nimport { Constants } from 'src/app/constants/Constants';\nimport { Messages } from 'src/app/constants/Messages';\nimport { ClienteController } from 'src/app/controller/ClienteController';\nimport { FabricanteController } from 'src/app/controller/FabricanteController';\nimport { LoadController } from 'src/app/controller/LoadController';\nimport { MessageController } from 'src/app/controller/MessageController';\nimport { ProdutoCategoriaController } from 'src/app/controller/ProdutoCategoriaController';\nimport { ServicoController } from 'src/app/controller/ServicoController';\nimport { UnidadeController } from 'src/app/controller/UnidadeController';\nimport { UtilValidators } from 'src/app/utils/UtilValidators';\nimport { UtilApp } from 'src/app/utils/UtilApp';\nimport { ProdutoController } from 'src/app/controller/ProdutoController';\n\n\n@Component({\n    selector: 'app-generic-cad',\n    templateUrl: './generic-cad.page.html'\n})\nexport class GenericCadPage {\n\n    @ViewChild('focusInit', { static: false }) inputFocusInit: IonInput;\n\n    /** DADOS GENERICOS PARA CADASTROS */\n    public form: FormGroup;\n    public entity: any = {};\n    public entityIndex: any;\n    public isSubmitted = false;\n    public isSaveAndBack = false;\n    public postParams: any;\n    public listUf = Constants.UFS;\n    public messages = Messages;\n\n    /**************************************** */\n\n\n    constructor(\n        public unidadeController: UnidadeController,\n        public clienteController: ClienteController,\n        public produtoCategoriaController: ProdutoCategoriaController,\n        public fabricanteController: FabricanteController,\n        public servicoController: ServicoController,\n        public produtoController: ProdutoController,\n        public navCtrl: NavController,\n        public router: Router,\n        public messageController: MessageController,\n        public currencyPipe: CurrencyPipe,\n        private routerActive: ActivatedRoute,\n        private loadingController: LoadController,\n        \n        ) {\n        this.navigateGetParams();\n    }\n\n    public get errorControl() {\n        return this.form.controls;\n    }\n\n    public validForm(): boolean {\n        this.isSubmitted = true;\n        if (!this.form.valid)\n            return false;\n        else {\n            const id = this.entity.id;\n            this.entity = this.form.value;\n            this.entity.id = id;\n            return true;\n        }\n    }\n\n    public isAlterForm(): boolean {\n        return this.entity.id != null;\n    }\n\n    public navigateBack() {\n        this.navCtrl.back();\n    }\n\n    public showLoading() {\n        return this.loadingController.showLoading();\n    }\n\n    public focusInit() {\n        setTimeout(() => this.inputFocusInit.setFocus(), 400);\n    }\n\n\n    navigatePostParams(url: string, entity: any, index: any) {\n        let navigationExtras: NavigationExtras = {\n            state: {\n                postParams: { entity: entity, index: index }\n            }\n        };\n        this.router.navigate(['/' + url], navigationExtras);\n    }\n\n    navigateGetParams(): any {\n        this.routerActive.params.subscribe(params => {\n            let getNav = this.router.getCurrentNavigation();\n            if (getNav.extras.state) {\n                const result = getNav.extras.state.postParams;\n                this.entity = result.entity;\n                this.entityIndex = result.index;\n            }\n        });\n    }\n\n    public navigate(url: string) {\n        this.navCtrl.navigateForward('/' + url);\n    }\n\n\n\n    async hideLoading() {\n        await this.loadingController.hideLoading();\n    }\n\n    removeValidation(nameField: string) {\n        this.form.get(nameField).clearValidators();\n        this.form.get(nameField).updateValueAndValidity();\n    }\n\n    addValidation(nameField: string, validatiors: any) {\n        this.form.get(nameField).setValidators(validatiors);\n        this.form.get(nameField).updateValueAndValidity();\n    }\n\n \n  \n\n}\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nexport class UtilValidators {\r\n    constructor() { }\r\n\r\n    static ValidaCpf(controle: AbstractControl) {\r\n        let cpf = controle.value + '';\r\n        cpf = cpf.split('.').join('');\r\n        cpf = cpf.split('-').join('');\r\n        \r\n      \r\n        if (cpf) {\r\n          let numbers, digits, sum, i, result, equalDigits;\r\n          equalDigits = 1;\r\n          if (cpf.length < 11) {\r\n           return {cpfNotValid: true };\r\n          }\r\n \r\n          for (i = 0; i < cpf.length - 1; i++) {\r\n            if (cpf.charAt(i) !== cpf.charAt(i + 1)) {\r\n              equalDigits = 0;\r\n              break;\r\n            }\r\n          }\r\n \r\n          if (!equalDigits) {\r\n            numbers = cpf.substring(0, 9);\r\n            digits = cpf.substring(9);\r\n            sum = 0;\r\n            for (i = 10; i > 1; i--) {\r\n              sum += numbers.charAt(10 - i) * i;\r\n            }\r\n \r\n            result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\r\n \r\n            if (result !== Number(digits.charAt(0))) {\r\n              return { cpfNotValid: true };\r\n            }\r\n            numbers = cpf.substring(0, 10);\r\n            sum = 0;\r\n \r\n            for (i = 11; i > 1; i--) {\r\n              sum += numbers.charAt(11 - i) * i;\r\n            }\r\n            result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\r\n \r\n            if (result !== Number(digits.charAt(1))) {\r\n              return { cpfNotValid: true };\r\n            }\r\n            return null;\r\n          } else {\r\n            return { cpfNotValid: true };\r\n          }\r\n       }\r\n     return null;\r\n   };\r\n\r\n}"]}