{"version":3,"sources":["webpack:///src/app/pages/cadastro/ordem-servico/ordem-servico-cad/order-servico-cad-cabecalho/order-servico-cad-cabecalho.page.html","webpack:///src/app/entity/OrdemServico.ts","webpack:///src/app/pages/cadastro/ordem-servico/ordem-servico-cad/order-servico-cad-cabecalho/order-servico-cad-cabecalho-routing.module.ts","webpack:///src/app/pages/cadastro/ordem-servico/ordem-servico-cad/order-servico-cad-cabecalho/order-servico-cad-cabecalho.module.ts","webpack:///src/app/pages/cadastro/ordem-servico/ordem-servico-cad/order-servico-cad-cabecalho/order-servico-cad-cabecalho.page.ts"],"names":["OrdemServico","itensProdutos","itensServicos","cliente","routes","path","component","OrderServicoCadCabecalhoPageRoutingModule","imports","forChild","exports","OrderServicoCadCabecalhoPageModule","declarations","OrderServicoCadCabecalhoPage","initForm","isAlterForm","entityToForm","entity","form","nome","Object","assign","validForm","event","console","log","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaA,Y;;;;;AAAb;AAAA;;AAAA;;;AAcI,gBAAAC,aAAA,GAAwC,EAAxC;AACA,gBAAAC,aAAA,GAAwC,EAAxC;AACA,gBAAAC,OAAA,GAAmB,IAAI,gDAAJ,EAAnB;AAhBJ;AAmBC;;;QAnBiC,8C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDlC,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,yCAAyC;AAAA;AAAA,O;;AAAzCA,+CAAyC,6DAJrD,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIqD,GAAzCH,yCAAyC,CAAzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCMAI,kCAAkC;AAAA;AAAA,O;;AAAlCA,wCAAkC,6DAX9C,+DAAS;AACNH,eAAO,EAAE,CACL,4DADK,EAEL,0DAFK,EAGL,0DAHK,EAIL,qHAJK,EAKL,kEALK,CADH;AAQNI,oBAAY,EAAE,CAAC,8FAAD,EACV,wHADU;AARR,OAAT,CAW8C,GAAlCD,kCAAkC,CAAlC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCZAE,4BAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,qCAI1B;AACP,iBAAKC,QAAL;AACH;AANoC;AAAA;AAAA,qCAQ1B;AAEP,gBAAI,KAAKC,WAAL,EAAJ,EAAwB;AACpB,mBAAKC,YAAL;AACH,aAFD,MAEO;AACH,mBAAKC,MAAL,GAAc,IAAI,wEAAJ,EAAd;AACH,aANM,CAUP;;;AACA,iBAAKC,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACtBf,qBAAO,EAAE,IAAI,0DAAJ,CAAgB,KAAKc,MAAL,CAAYd,OAAZ,CAAoBgB,IAApC;AADa,aAAd,CAAZ;AAIH;AAvBoC;AAAA;AAAA,yCA0BtB;AACX,iBAAKF,MAAL,GAAcG,MAAM,CAACC,MAAP,CAAc,IAAI,wEAAJ,EAAd,EAAkC,KAAKJ,MAAvC,CAAd;AACH;AA5BoC;AAAA;AAAA,uCA8BlB;;;;;;AAEf,0BAAI,KAAKK,SAAL,EAAJ,EAAsB,CAErB;;;;;;;;;AACJ;AAnCoC;AAAA;AAAA,4CAqCnBC,KArCmB,EAqCZ;AACtB,iBAAKN,MAAL,CAAYd,OAAZ,GAAsBoB,KAAtB;AACF;AAvCoC;AAAA;AAAA,kCAyC7BA,KAzC6B,EAyCtB;AACXC,mBAAO,CAACC,GAAR,CAAa,KAAKR,MAAL,CAAYd,OAAzB;AACF;AA3CmC;;AAAA;AAAA,QAAS,oFAAT,C;;AAA5BU,kCAA4B,6DAJxC,gEAAU;AACPa,gBAAQ,EAAE,iCADH;AAEPC,gBAAQ,EAAR;AAAA;AAAA;AAFO,OAAV,CAIwC,GAA5Bd,4BAA4B,CAA5B","file":"order-servico-cad-cabecalho-order-servico-cad-cabecalho-module-es5.js","sourcesContent":["export default \"<ion-content>\\n\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n\\n        <ion-row>\\n            <ion-col>\\n                <app-buscar-cliente  (clienteSelected)=\\\"onClienteSelected($event)\\\" ></app-buscar-cliente>\\n            </ion-col>\\n        </ion-row>\\n\\n      \\n    </form>\\n\\n</ion-content>\";","import { Cliente } from \"./Cliente\";\r\nimport { Entity } from \"./Entity\";\r\nimport { OrdemServicoItemProd } from \"./OrdemServicoItemProd\";\r\nimport { OrdemServicoItemServ } from \"./OrdemServicoItemServ\";\r\nimport { OrdemServicoItemStatus } from \"./OrdemServicoItemStatus\";\r\n\r\nexport class OrdemServico extends Entity {\r\n\r\n    dataRecebimento: Date;    \r\n    dataRealizacao: Date;   \r\n    dataEntrega: Date;  \r\n    valorTotalProdutos: number;  \r\n    valorTotalServicos: number;  \r\n    desconto: number;    \r\n    totalOrdemServico: number;    \r\n    equipamentos: string;  \r\n    defeitos: string;  \r\n    laudoTecnico: string;  \r\n    garantia: string;       \r\n    status: OrdemServicoItemStatus;\r\n    itensProdutos: OrdemServicoItemProd[] = [];\r\n    itensServicos: OrdemServicoItemServ[] = []; \r\n    cliente: Cliente = new Cliente();  \r\n    criadoEm: Date;\r\n    atualizadoEm: Date;\r\n}\r\n\r\n  \r\n\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrderServicoCadCabecalhoPage } from './order-servico-cad-cabecalho.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderServicoCadCabecalhoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrderServicoCadCabecalhoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderServicoCadCabecalhoPageRoutingModule } from './order-servico-cad-cabecalho-routing.module';\n\nimport { OrderServicoCadCabecalhoPage } from './order-servico-cad-cabecalho.page';\nimport { BuscarClienteComponent } from 'src/app/components/buscar/buscar-cliente/buscar-cliente.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        OrderServicoCadCabecalhoPageRoutingModule,\n        ReactiveFormsModule\n    ],\n    declarations: [OrderServicoCadCabecalhoPage,\n        BuscarClienteComponent]\n})\nexport class OrderServicoCadCabecalhoPageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Cliente } from 'src/app/entity/Cliente';\nimport { OrdemServico } from 'src/app/entity/OrdemServico';\nimport { GenericCadPage } from '../../../generic/generic-cad/generic-cad.page';\n\n@Component({\n    selector: 'app-order-servico-cad-cabecalho',\n    templateUrl: './order-servico-cad-cabecalho.page.html'\n})\nexport class OrderServicoCadCabecalhoPage extends GenericCadPage implements OnInit {\n\n   \n\n    ngOnInit() {\n        this.initForm();\n    }\n\n    initForm() {\n\n        if (this.isAlterForm()) {\n            this.entityToForm();\n        } else {\n            this.entity = new OrdemServico();\n        }\n\n        \n\n        // CRIANDO CAMPOS//\n        this.form = new FormGroup({\n            cliente: new FormControl(this.entity.cliente.nome),\n        });\n\n    }\n\n\n    entityToForm() {\n        this.entity = Object.assign(new OrdemServico(), this.entity);\n    }\n\n    async submitForm() {\n\n        if (this.validForm()) {\n\n        }\n    }\n\n    onClienteSelected(event) {\n       this.entity.cliente = event;\n    }\n\n    onClick(event) {\n        console.log( this.entity.cliente);\n     }\n\n}\n"]}