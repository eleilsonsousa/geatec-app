{"version":3,"sources":["webpack:///src/app/pages/cadastro/generic/generic-cad/generic-cad.page.html","webpack:///src/app/pages/cadastro/produto-categoria/produto-categoria-cad/produto-categoria-cad.page.html","webpack:///src/app/constants/Constants.ts","webpack:///src/app/controller/ClienteController.ts","webpack:///src/app/controller/Controller.ts","webpack:///src/app/controller/FabricanteController.ts","webpack:///src/app/controller/LoadController.ts","webpack:///src/app/controller/MessageController.ts","webpack:///src/app/controller/ProdutoCategoriaController.ts","webpack:///src/app/controller/ProdutoController.ts","webpack:///src/app/controller/ServicoController.ts","webpack:///src/app/controller/UnidadeController.ts","webpack:///src/app/entity/Entity.ts","webpack:///src/app/pages/cadastro/generic/generic-cad/generic-cad.page.ts","webpack:///src/app/pages/cadastro/produto-categoria/produto-categoria-cad/produto-categoria-cad-routing.module.ts","webpack:///src/app/pages/cadastro/produto-categoria/produto-categoria-cad/produto-categoria-cad.module.ts","webpack:///src/app/pages/cadastro/produto-categoria/produto-categoria-cad/produto-categoria-cad.page.ts"],"names":["Constants","UFS","codigo_uf","uf","nome","ClienteController","providedIn","Controller","urlClass","url_base","http","getHttpClient","httpOptions","headers","url_full","get","pipe","handleError","id","t","post","JSON","stringify","put","alterar","salvar","error","errorMessage","ErrorEvent","message","status","console","log","build","XMLHttpRequest","String","FabricanteController","LoadController","loadingController","isLoading","create","dialogs_loading","cssClass","translucent","showBackdrop","spinner","keyboardClose","backdropDismiss","then","a","present","dismiss","MessageController","alertController","toastController","title","header","subHeader","buttons","alert","onDidDismiss","result","duration","toast","dialogs_confimation_title","text","dialogs_confimation_no","role","handler","blah","dialogs_confimation_yes","ProdutoCategoriaController","ProdutoController","ServicoController","UnidadeController","Entity","json","Object","assign","GenericCadPage","unidadeController","clienteController","produtoCategoriaController","fabricanteController","servicoController","produtoController","navCtrl","router","messageController","currencyPipe","routerActive","entity","isSubmitted","isSaveAndBack","listUf","messages","navigateGetParams","form","valid","value","back","showLoading","setTimeout","inputFocusInit","setFocus","url","index","navigationExtras","state","postParams","navigate","params","subscribe","getNav","getCurrentNavigation","extras","entityIndex","navigateForward","hideLoading","nameField","clearValidators","updateValueAndValidity","validatiors","setValidators","controls","selector","template","routes","path","component","ProdutoCategoriaCadPageRoutingModule","imports","forChild","exports","ProdutoCategoriaCadPageModule","declarations","ProdutoCategoriaCadPage","createFormFields","initForm","showFocus","isAlterForm","required","validForm","salvarOuAlterar","data","showMessageToast","dialogs_register_save","navigatePostParams","inputNome"],"mappings":"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","file":"pages-cadastro-produto-categoria-produto-categoria-cad-produto-categoria-cad-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>generic-cad</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>{{messages.produto_categoria_cad_title}}</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"submitForm()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n\\n\\n<ion-content padding>\\n\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.produto_categoria_cad_field_label_nome}}</ion-label>\\n                    <ion-input formControlName=\\\"nome\\\" #inputNome [attr.maxLength]=\\\"entity.nome_length\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div *ngIf=\\\"isSubmitted && errorControl.nome.errors?.required\\\" class=\\\"error-message\\\">\\n                    {{ messages.field_required }}\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n    </form>\\n\\n</ion-content>\";","export abstract class Constants {\r\n    \r\n    static readonly UFS: any[] = [\r\n        { codigo_uf: 27, uf: 'AL', nome: 'Alagoas' },\r\n        { codigo_uf: 12, uf: 'AC', nome: 'Acre' },\r\n        { codigo_uf: 16, uf: 'AP', nome: 'Amapá' },\r\n        { codigo_uf: 13, uf: 'AM', nome: 'Amazonas' },\r\n        { codigo_uf: 29, uf: 'BA', nome: 'Bahia' },\r\n        { codigo_uf: 23, uf: 'CE', nome: 'Ceará' },\r\n        { codigo_uf: 53, uf: 'DF', nome: 'Distrito Federal' },\r\n        { codigo_uf: 32, uf: 'ES', nome: 'Espírito Santo' },\r\n        { codigo_uf: 52, uf: 'GO', nome: 'Goías' },\r\n        { codigo_uf: 21, uf: 'MA', nome: 'Maranhão' },\r\n        { codigo_uf: 51, uf: 'MT', nome: 'Mato Grosso' },\r\n        { codigo_uf: 50, uf: 'MS', nome: 'Mato G. do Sul' },\r\n        { codigo_uf: 31, uf: 'MG', nome: 'Minas Gerais' },\r\n        { codigo_uf: 15, uf: 'PA', nome: 'Pará' },\r\n        { codigo_uf: 25, uf: 'PB', nome: 'Paraíba' },\r\n        { codigo_uf: 41, uf: 'PR', nome: 'Paraná' },\r\n        { codigo_uf: 26, uf: 'PE', nome: 'Pernambuco' },\r\n        { codigo_uf: 22, uf: 'PI', nome: 'Piauí' },\r\n        { codigo_uf: 33, uf: 'RJ', nome: 'Rio de Janeiro' },\r\n        { codigo_uf: 24, uf: 'RN', nome: 'Rio G. do Norte' },\r\n        { codigo_uf: 43, uf: 'RS', nome: 'Rio G. do Sul' },\r\n        { codigo_uf: 11, uf: 'RO', nome: 'Rondônia' },\r\n        { codigo_uf: 14, uf: 'RR', nome: 'Roraíma' },\r\n        { codigo_uf: 42, uf: 'SC', nome: 'Santa Catarina' },\r\n        { codigo_uf: 35, uf: 'SP', nome: 'São Paulo' },\r\n        { codigo_uf: 28, uf: 'SE', nome: 'Sergipe' },\r\n        { codigo_uf: 17, uf: 'TO', nome: 'Tocantins' },\r\n\r\n    ];\r\n\r\n}","\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Cliente } from '../entity/Cliente';\r\nimport { Controller } from '../controller/Controller';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ClienteController extends Controller<Cliente>{\r\n\r\n    constructor() {\r\n        super('/clientes');\r\n    }\r\n\r\n}\r\n","\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpXhrBackend } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Entity } from '../entity/Entity';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Controller<T> {\r\n\r\n    /** URL API */\r\n    public url_base = 'http://api-geatec-com-br.umbler.net';\r\n    private url_full;\r\n\r\n    /** HTTP  */\r\n    public http = this.getHttpClient();\r\n    public httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    }\r\n\r\n    constructor(urlClass: String) {\r\n        this.url_full = this.url_base + urlClass;\r\n    }\r\n\r\n    public buscarTodos(): Observable<T[]> {\r\n    \r\n        return this.http.get<T[]>(this.url_full)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError))\r\n    }\r\n\r\n    buscarPorId(id: number): Observable<T> {\r\n        return this.http.get<T>(this.url_full + '/' + id)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    salvar(t: T): Observable<T> {\r\n        return this.http.post<T>(this.url_full, JSON.stringify(t), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    alterar(t: T): Observable<T> {\r\n        return this.http.put<T>(this.url_full, JSON.stringify(t), this.httpOptions)\r\n            .pipe(\r\n                retry(2),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    salvarOuAlterar(t): Observable<T> {\r\n        if (t.id) {\r\n            return this.alterar(t);\r\n        } else {\r\n            return this.salvar(t);\r\n        }\r\n    }\r\n\r\n    excluir(t): any {\r\n        return this.http.delete<T>(this.url_full + '/' + t.id, this.httpOptions)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n\r\n\r\n    // Manipulação de erros\r\n    handleError(error: HttpErrorResponse) {\r\n        let errorMessage = '';\r\n        if (error.error instanceof ErrorEvent) {\r\n            // Erro ocorreu no lado do client\r\n            errorMessage = error.error.message;\r\n        } else {\r\n            // Erro ocorreu no lado do servidor\r\n            errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\r\n        }\r\n        console.log(errorMessage);\r\n        return throwError(errorMessage);\r\n    };\r\n\r\n    getHttpClient() {\r\n        return new HttpClient(new HttpXhrBackend({ build: () => new XMLHttpRequest() }));\r\n    }\r\n\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Fabricante } from '../entity/Fabricante';\r\nimport { Controller } from './Controller';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FabricanteController extends Controller<Fabricante> {\r\n\r\n    constructor() {\r\n        super('/fabricantes');\r\n    }\r\n\r\n}\r\n","/* import { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoadController {\r\n\r\n    constructor(private loadingController: LoadingController) { }\r\n\r\n    async showLoading(message: string = null, duration: number = null) {\r\n        const loading = await this.loadingController.create(\r\n            { message, duration, translucent: true, cssClass: \"load-controller\",backdropDismiss: true });\r\n        return await loading.present();\r\n    }\r\n\r\n    async hideLoading() {\r\n        this.loadingController.dismiss();\r\n        /*  setTimeout(() => {\r\n            this.loadingController.dismiss();\r\n         }, 500); */\r\n\r\n\r\n\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\nimport { Messages } from '../constants/Messages';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoadController {\r\n\r\n    isLoading = false;\r\n\r\n    constructor(public loadingController: LoadingController) { }\r\n\r\n    async showLoading() {\r\n        this.isLoading = true;\r\n\r\n\r\n        return await this.loadingController.create({\r\n\r\n            message: Messages.dialogs_loading,\r\n            cssClass: 'load-controller',\r\n            translucent: false,\r\n            showBackdrop: false,\r\n            spinner:\"dots\",\r\n            keyboardClose: true,\r\n            backdropDismiss: false\r\n\r\n        }).then(a => {\r\n            a.present().then(() => {\r\n                if (!this.isLoading) {\r\n                    a.dismiss().then(() => console.log('abort presenting'));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    async hideLoading() {\r\n        this.isLoading = false;\r\n        return await this.loadingController.dismiss().then(() => console.log('dismissed'));\r\n    }\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { AlertController, ToastController } from '@ionic/angular';\r\nimport { Messages } from '../constants/Messages';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MessageController {\r\n\r\n\r\n    constructor(public alertController: AlertController,\r\n        public toastController: ToastController) {\r\n    }\r\n\r\n    async showMessage(title: string, message: string) {\r\n        const alert = await this.alertController.create({\r\n            header: title,\r\n            subHeader: '',\r\n            message: message,\r\n            buttons: ['OK'],\r\n        });\r\n\r\n        await alert.present();\r\n        let result = await alert.onDidDismiss();\r\n        console.log(result);\r\n    }\r\n\r\n    async showMessageToast(message: string) {\r\n        const toast = await this.toastController.create({\r\n            message: message,\r\n            duration: 2000,\r\n            cssClass: 'toast-message'\r\n        });\r\n        toast.present();\r\n    }\r\n\r\n    async showMessageConfirm(message: string) {\r\n        let result = false;\r\n        const alert = await this.alertController.create({\r\n          cssClass: 'my-custom-class',\r\n          header: Messages.dialogs_confimation_title,\r\n          message: message,\r\n          buttons: [\r\n            {\r\n              text: Messages.dialogs_confimation_no,\r\n              role: 'cancel',\r\n              cssClass: 'secondary',\r\n              handler: (blah) => {\r\n                result = false;\r\n              }\r\n            }, {\r\n              text: Messages.dialogs_confimation_yes,\r\n              handler: () => {\r\n                result = true;\r\n              }\r\n            }\r\n          ]\r\n        });\r\n    \r\n       await alert.present();\r\n       await alert.onDidDismiss();  \r\n       return result;\r\n      }\r\n    \r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Unidade } from '../entity/Unidade';\r\nimport { Controller } from './Controller';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProdutoCategoriaController extends Controller<Unidade> {\r\n\r\n    constructor() {\r\n        super('/produtos-categorias');\r\n    }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Produto } from '../entity/Produto';\r\nimport { Controller } from './Controller'; \r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProdutoController extends Controller<Produto> {\r\n\r\n    constructor() {\r\n        super('/produtos');\r\n    }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Servico } from '../entity/Servico';\r\nimport { Controller } from './Controller';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ServicoController extends Controller<Servico> {\r\n\r\n    constructor() {\r\n        super('/servicos');\r\n    }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Unidade } from '../entity/Unidade';\r\nimport { Controller } from './Controller';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UnidadeController extends Controller<Unidade> {\r\n\r\n    constructor() {\r\n        super('/unidades');\r\n    }\r\n\r\n}\r\n","\r\nexport class Entity {\r\n\r\n    public id: number;\r\n    public url_base = 'http://api-geatec-com-br.umbler.net';\r\n\r\n    public toObject(json) {\r\n       return Object.assign(json , this);\r\n    }\r\n   \r\n}\r\n","//import { CurrencyPipe } from '@angular/common';\nimport { CurrencyPipe } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { IonInput, NavController, ToastController } from '@ionic/angular';\nimport { Constants } from 'src/app/constants/Constants';\nimport { Messages } from 'src/app/constants/Messages';\nimport { ClienteController } from 'src/app/controller/ClienteController';\nimport { FabricanteController } from 'src/app/controller/FabricanteController';\nimport { LoadController } from 'src/app/controller/LoadController';\nimport { MessageController } from 'src/app/controller/MessageController';\nimport { ProdutoCategoriaController } from 'src/app/controller/ProdutoCategoriaController';\nimport { ServicoController } from 'src/app/controller/ServicoController';\nimport { UnidadeController } from 'src/app/controller/UnidadeController';\nimport { UtilValidators } from 'src/app/utils/UtilValidators';\nimport { UtilApp } from 'src/app/utils/UtilApp';\nimport { ProdutoController } from 'src/app/controller/ProdutoController';\n\n\n@Component({\n    selector: 'app-generic-cad',\n    templateUrl: './generic-cad.page.html'\n})\nexport class GenericCadPage {\n\n    @ViewChild('focusInit', { static: false }) inputFocusInit: IonInput;\n\n    /** DADOS GENERICOS PARA CADASTROS */\n    public form: FormGroup;\n    public entity: any = {};\n    public entityIndex: any;\n    public isSubmitted = false;\n    public isSaveAndBack = false;\n    public postParams: any;\n    public listUf = Constants.UFS;\n    public messages = Messages;\n\n    /**************************************** */\n\n\n    constructor(\n        public unidadeController: UnidadeController,\n        public clienteController: ClienteController,\n        public produtoCategoriaController: ProdutoCategoriaController,\n        public fabricanteController: FabricanteController,\n        public servicoController: ServicoController,\n        public produtoController: ProdutoController,\n        public navCtrl: NavController,\n        public router: Router,\n        public messageController: MessageController,\n        public currencyPipe: CurrencyPipe,\n        private routerActive: ActivatedRoute,\n        private loadingController: LoadController,\n        \n        ) {\n        this.navigateGetParams();\n    }\n\n    public get errorControl() {\n        return this.form.controls;\n    }\n\n    public validForm(): boolean {\n        this.isSubmitted = true;\n        if (!this.form.valid)\n            return false;\n        else {\n            const id = this.entity.id;\n            this.entity = this.form.value;\n            this.entity.id = id;\n            return true;\n        }\n    }\n\n    public isAlterForm(): boolean {\n        return this.entity.id != null;\n    }\n\n    public navigateBack() {\n        this.navCtrl.back();\n    }\n\n    public showLoading() {\n        return this.loadingController.showLoading();\n    }\n\n    public focusInit() {\n        setTimeout(() => this.inputFocusInit.setFocus(), 400);\n    }\n\n\n    navigatePostParams(url: string, entity: any, index: any) {\n        let navigationExtras: NavigationExtras = {\n            state: {\n                postParams: { entity: entity, index: index }\n            }\n        };\n        this.router.navigate(['/' + url], navigationExtras);\n    }\n\n    navigateGetParams(): any {\n        this.routerActive.params.subscribe(params => {\n            let getNav = this.router.getCurrentNavigation();\n            if (getNav.extras.state) {\n                const result = getNav.extras.state.postParams;\n                this.entity = result.entity;\n                this.entityIndex = result.index;\n            }\n        });\n    }\n\n    public navigate(url: string) {\n        this.navCtrl.navigateForward('/' + url);\n    }\n\n\n\n    async hideLoading() {\n        await this.loadingController.hideLoading();\n    }\n\n    removeValidation(nameField: string) {\n        this.form.get(nameField).clearValidators();\n        this.form.get(nameField).updateValueAndValidity();\n    }\n\n    addValidation(nameField: string, validatiors: any) {\n        this.form.get(nameField).setValidators(validatiors);\n        this.form.get(nameField).updateValueAndValidity();\n    }\n\n \n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProdutoCategoriaCadPage } from './produto-categoria-cad.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProdutoCategoriaCadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProdutoCategoriaCadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProdutoCategoriaCadPageRoutingModule } from './produto-categoria-cad-routing.module';\n\nimport { ProdutoCategoriaCadPage } from './produto-categoria-cad.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProdutoCategoriaCadPageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [ProdutoCategoriaCadPage]\n})\nexport class ProdutoCategoriaCadPageModule {}\n","import { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GenericCadPage } from '../../generic/generic-cad/generic-cad.page';\nimport { IonInput } from '@ionic/angular';\nimport { UtilValidators } from 'src/app/utils/UtilValidators';\nimport { ProdutoCategoria } from 'src/app/entity/ProdutoCategoria';\n\n@Component({\n    selector: 'app-produto-categoria-cad',\n    templateUrl: './produto-categoria-cad.page.html'\n})\nexport class ProdutoCategoriaCadPage extends GenericCadPage implements OnInit {\n\n    @ViewChild('inputNome', { static: false }) inputNome: IonInput;\n\n\n    ngOnInit() {\n        this.createFormFields();\n    }\n\n    ionViewWillEnter() {\n        this.hideLoading();\n        this.initForm();\n    }\n\n    ionViewDidEnter() {\n        this.showFocus();\n    }\n\n    initForm() {\n\n        /** NOVO */\n        if (!this.isAlterForm()) {\n            this.entity = new ProdutoCategoria();\n        }\n    }\n\n    createFormFields() {\n        this.form = new FormGroup({\n            nome: new FormControl(this.entity.nome, [Validators.required]),\n        });\n    }\n\n    async submitForm() {\n        console.log(this.entity);\n        if (this.validForm()) {\n            console.log(this.entity);\n            this.showLoading();\n            this.produtoCategoriaController.salvarOuAlterar(this.entity).subscribe(data => {\n                if (!this.entity.id) this.entity.id = data.id;\n                this.messageController.showMessageToast(this.messages.dialogs_register_save);\n                this.navigatePostParams('produto-categoria-list', this.entity, this.entityIndex);\n                this.hideLoading();\n            });\n        }\n    }\n\n    showFocus() {\n        setTimeout(() => this.inputNome.setFocus(), 400);\n    }\n    \n\n\n\n}\n"]}