{"version":3,"sources":["webpack:///src/app/pages/cadastro/generic/generic-cad/generic-cad.page.html","webpack:///src/app/pages/cadastro/servico/servico-cad/servico-cad.page.html","webpack:///src/app/constants/Constants.ts","webpack:///src/app/entity/Entity.ts","webpack:///src/app/entity/Servico.ts","webpack:///src/app/pages/cadastro/generic/generic-cad/generic-cad.page.ts","webpack:///src/app/pages/cadastro/servico/servico-cad/servico-cad-routing.module.ts","webpack:///src/app/pages/cadastro/servico/servico-cad/servico-cad.module.ts","webpack:///src/app/pages/cadastro/servico/servico-cad/servico-cad.page.ts"],"names":["Constants","UFS","codigo_uf","uf","nome","Entity","url_base","json","Object","assign","Servico","nome_length","preco_length","observacao_length","GenericCadPage","unidadeController","clienteController","produtoCategoriaController","fabricanteController","servicoController","produtoController","navCtrl","router","messageController","currencyPipe","routerActive","loadingController","entity","isSubmitted","isSaveAndBack","listUf","messages","navigateGetParams","form","valid","id","value","back","showLoading","setTimeout","inputFocusInit","setFocus","url","index","navigationExtras","state","postParams","navigate","params","subscribe","getNav","getCurrentNavigation","extras","result","entityIndex","navigateForward","hideLoading","nameField","get","clearValidators","updateValueAndValidity","validatiors","setValidators","controls","selector","template","routes","path","component","ServicoCadPageRoutingModule","imports","forChild","exports","ServicoCadPageModule","declarations","ServicoCadPage","createFormFields","focusInit","required","preco","observacao","initForm","isAlterForm","entityToForm","validForm","formToEntity","salvarOuAlterar","data","showMessageToast","dialogs_register_save","navigatePostParams","event","formatCurrencyToBrlAsync","precoFormatted","formatCurrencyToDecimal","formatCurrencyToBrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;;UAAsBA,S;;;;AAEF,gBAAAC,GAAA,GAAa,CACzB;AAAEC,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OADyB,EAEzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAFyB,EAGzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAHyB,EAIzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAJyB,EAKzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OALyB,EAMzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OANyB,EAOzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAPyB,EAQzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OARyB,EASzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OATyB,EAUzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAVyB,EAWzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAXyB,EAYzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAZyB,EAazB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAbyB,EAczB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAdyB,EAezB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAfyB,EAgBzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAhByB,EAiBzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAjByB,EAkBzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAlByB,EAmBzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAnByB,EAoBzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OApByB,EAqBzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OArByB,EAsBzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAtByB,EAuBzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAvByB,EAwBzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAxByB,EAyBzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OAzByB,EA0BzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OA1ByB,EA2BzB;AAAEF,iBAAS,EAAE,EAAb;AAAiBC,UAAE,EAAE,IAArB;AAA2BC,YAAI,EAAE;AAAjC,OA3ByB,CAAb;;;;;;;;;;;;;;;;ACDpB;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,M;AAAb;AAAA;;AAGW,eAAAC,QAAA,GAAW,qCAAX;AAMV;;;;mCAJmBC,I,EAAM;AACnB,mBAAOC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAqB,IAArB,CAAP;AACF;;;;;;;;;;;;;;;;;;;;;ACRL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAEcG,O;;;;;AAAd;AAAA;;AAAA;;;AAQI;;AACgB,gBAAAC,WAAA,GAAc,EAAd;AACA,gBAAAC,YAAA,GAAe,CAAf;AACA,gBAAAC,iBAAA,GAAoB,GAApB;AAXpB;AAYC;;;QAZ8B,8C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oDCF/B;;;UAwBaC,cAAc;AAcvB;AAGA,gCACWC,iBADX,EAEWC,iBAFX,EAGWC,0BAHX,EAIWC,oBAJX,EAKWC,iBALX,EAMWC,iBANX,EAOWC,OAPX,EAQWC,MARX,EASWC,iBATX,EAUWC,YAVX,EAWYC,YAXZ,EAYYC,iBAZZ,EAY6C;AAAA;;AAXlC,eAAAX,iBAAA,GAAAA,iBAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,0BAAA,GAAAA,0BAAA;AACA,eAAAC,oBAAA,GAAAA,oBAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACC,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AAvBL,eAAAC,MAAA,GAAc,EAAd;AAEA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,aAAA,GAAgB,KAAhB;AAEA,eAAAC,MAAA,GAAS,sEAAU7B,GAAnB;AACA,eAAA8B,QAAA,GAAW,mEAAX;AAoBH,eAAKC,iBAAL;AACH;;AAjCsB;AAAA;AAAA,sCAuCP;AACZ,iBAAKJ,WAAL,GAAmB,IAAnB;AACA,gBAAI,CAAC,KAAKK,IAAL,CAAUC,KAAf,EACI,OAAO,KAAP,CADJ,KAEK;AACD,kBAAMC,EAAE,GAAG,KAAKR,MAAL,CAAYQ,EAAvB;AACA,mBAAKR,MAAL,GAAc,KAAKM,IAAL,CAAUG,KAAxB;AACA,mBAAKT,MAAL,CAAYQ,EAAZ,GAAiBA,EAAjB;AACA,qBAAO,IAAP;AACH;AACJ;AAjDsB;AAAA;AAAA,wCAmDL;AACd,mBAAO,KAAKR,MAAL,CAAYQ,EAAZ,IAAkB,IAAzB;AACH;AArDsB;AAAA;AAAA,yCAuDD;AAClB,iBAAKd,OAAL,CAAagB,IAAb;AACH;AAzDsB;AAAA;AAAA,wCA2DF;AACjB,mBAAO,KAAKX,iBAAL,CAAuBY,WAAvB,EAAP;AACH;AA7DsB;AAAA;AAAA,sCA+DJ;AAAA;;AACfC,sBAAU,CAAC;AAAA,qBAAM,MAAI,CAACC,cAAL,CAAoBC,QAApB,EAAN;AAAA,aAAD,EAAuC,GAAvC,CAAV;AACH;AAjEsB;AAAA;AAAA,6CAoEJC,GApEI,EAoESf,MApET,EAoEsBgB,KApEtB,EAoEkC;AACrD,gBAAIC,gBAAgB,GAAqB;AACrCC,mBAAK,EAAE;AACHC,0BAAU,EAAE;AAAEnB,wBAAM,EAAEA,MAAV;AAAkBgB,uBAAK,EAAEA;AAAzB;AADT;AAD8B,aAAzC;AAKA,iBAAKrB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,MAAML,GAAP,CAArB,EAAkCE,gBAAlC;AACH;AA3EsB;AAAA;AAAA,8CA6EN;AAAA;;AACb,iBAAKnB,YAAL,CAAkBuB,MAAlB,CAAyBC,SAAzB,CAAmC,UAAAD,MAAM,EAAI;AACzC,kBAAIE,MAAM,GAAG,MAAI,CAAC5B,MAAL,CAAY6B,oBAAZ,EAAb;;AACA,kBAAID,MAAM,CAACE,MAAP,CAAcP,KAAlB,EAAyB;AACrB,oBAAMQ,MAAM,GAAGH,MAAM,CAACE,MAAP,CAAcP,KAAd,CAAoBC,UAAnC;AACA,sBAAI,CAACnB,MAAL,GAAc0B,MAAM,CAAC1B,MAArB;AACA,sBAAI,CAAC2B,WAAL,GAAmBD,MAAM,CAACV,KAA1B;AACH;AACJ,aAPD;AAQH;AAtFsB;AAAA;AAAA,mCAwFPD,GAxFO,EAwFM;AACzB,iBAAKrB,OAAL,CAAakC,eAAb,CAA6B,MAAMb,GAAnC;AACH;AA1FsB;AAAA;AAAA,wCA8FH;;;;;;;AAChB,6BAAM,KAAKhB,iBAAL,CAAuB8B,WAAvB,EAAN;;;;;;;;;AACH;AAhGsB;AAAA;AAAA,2CAkGNC,SAlGM,EAkGa;AAChC,iBAAKxB,IAAL,CAAUyB,GAAV,CAAcD,SAAd,EAAyBE,eAAzB;AACA,iBAAK1B,IAAL,CAAUyB,GAAV,CAAcD,SAAd,EAAyBG,sBAAzB;AACH;AArGsB;AAAA;AAAA,wCAuGTH,SAvGS,EAuGUI,WAvGV,EAuG4B;AAC/C,iBAAK5B,IAAL,CAAUyB,GAAV,CAAcD,SAAd,EAAyBK,aAAzB,CAAuCD,WAAvC;AACA,iBAAK5B,IAAL,CAAUyB,GAAV,CAAcD,SAAd,EAAyBG,sBAAzB;AACH;AA1GsB;AAAA;AAAA,8BAmCG;AACtB,mBAAO,KAAK3B,IAAL,CAAU8B,QAAjB;AACH;AArCsB;;AAAA;AAAA,S;;;;gBAVlB;;gBANA;;gBAIA;;gBAHA;;gBAIA;;gBAIA;;gBAZU;;gBADwB;;gBAOlC;;gBAVA;;gBAGA;;gBAMA;;;;;;gBAgBJ,uD;AAAS,iBAAC,WAAD,EAAc;AAAE,sBAAQ;AAAV,WAAd;;;AAFDjD,oBAAc,6DAJ1B,gEAAU;AACPkD,gBAAQ,EAAE,iBADH;AAEPC,gBAAQ,EAAR;AAAA;AAAA;AAFO,OAAV,CAI0B,GAAdnD,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBb,UAAMoD,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,2BAA2B;AAAA;AAAA,O;;AAA3BA,iCAA2B,6DAJvC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIuC,GAA3BH,2BAA2B,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKAI,oBAAoB;AAAA;AAAA,O;;AAApBA,0BAAoB,6DAVhC,+DAAS;AACNH,eAAO,EAAE,CACL,4DADK,EAEL,0DAFK,EAGL,0DAHK,EAIL,uFAJK,EAKL,kEALK,CADH;AAQNI,oBAAY,EAAE,CAAC,gEAAD;AARR,OAAT,CAUgC,GAApBD,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRAE,cAAc;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,qCAIZ;AACP,iBAAKC,gBAAL;AACH;AANsB;AAAA;AAAA,4CAQL;AACd,iBAAKC,SAAL;AACH;AAVsB;AAAA;AAAA,6CAYJ;AACf,iBAAK5C,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACtB7B,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,KAAKuB,MAAL,CAAYvB,IAA5B,EAAkC,CAAC,0DAAW0E,QAAZ,CAAlC,CADgB;AAEtBC,mBAAK,EAAE,IAAI,0DAAJ,CAAgB,KAAKpD,MAAL,CAAYoD,KAA5B,CAFe;AAGtBC,wBAAU,EAAE,IAAI,0DAAJ,CAAgB,KAAKrD,MAAL,CAAYqD,UAA5B;AAHU,aAAd,CAAZ;AAMA,iBAAKC,QAAL;AACH;AApBsB;AAAA;AAAA,qCAuBZ;AACP,gBAAI,KAAKC,WAAL,EAAJ,EAAwB;AACpB,mBAAKC,YAAL;AACH,aAFD,MAEO;AACH,mBAAKxD,MAAL,GAAc,IAAI,8DAAJ,EAAd;AACH;AACJ;AA7BsB;AAAA;AAAA,uCA+BJ;;;;;;;;AAEf,0BAAI,KAAKyD,SAAL,EAAJ,EAAsB;AAClB,6BAAK9C,WAAL;AACA,6BAAK+C,YAAL;AAEA,6BAAKlE,iBAAL,CAAuBmE,eAAvB,CAAuC,KAAK3D,MAA5C,EAAoDsB,SAApD,CAA8D,UAAAsC,IAAI,EAAI;AAClE,8BAAI,CAAC,MAAI,CAAC5D,MAAL,CAAYQ,EAAjB,EAAqB,MAAI,CAACR,MAAL,CAAYQ,EAAZ,GAAiBoD,IAAI,CAACpD,EAAtB;;AACrB,gCAAI,CAACZ,iBAAL,CAAuBiE,gBAAvB,CAAwC,MAAI,CAACzD,QAAL,CAAc0D,qBAAtD;;AACA,gCAAI,CAACC,kBAAL,CAAwB,cAAxB,EAAwC,MAAI,CAAC/D,MAA7C,EAAqD,MAAI,CAAC2B,WAA1D;;AACA,gCAAI,CAACE,WAAL;AACH,yBALD;AAMH;;;;;;;;;AACJ;AA5CsB;AAAA;AAAA,sCA+CLmC,KA/CK,EA+CE;;;;;;;AACP,6BAAM,8DAAQC,wBAAR,CAAiCD,KAAK,CAACvD,KAAvC,CAAN;;;AAAduD,2BAAK,CAACvD,K;AACN,2BAAKyD,cAAL,GAAsBF,KAAK,CAACvD,KAA5B;;;;;;;;;AACH;AAlDsB;AAAA;AAAA,yCAoDR;AACX,iBAAKT,MAAL,CAAYoD,KAAZ,GAAoB,8DAAQe,uBAAR,CAAgC,KAAKD,cAArC,CAApB;AACH;AAtDsB;AAAA;AAAA,yCAwDR;AACX,iBAAKlE,MAAL,GAAcnB,MAAM,CAACC,MAAP,CAAc,IAAI,8DAAJ,EAAd,EAA6B,KAAKkB,MAAlC,CAAd;AACA,iBAAKA,MAAL,CAAYoD,KAAZ,GAAoB,8DAAQgB,mBAAR,CAA4B,KAAKpE,MAAL,CAAYoD,KAAxC,CAApB;AACA,iBAAKc,cAAL,GAAsB,KAAKlE,MAAL,CAAYoD,KAAlC;AACH;AA5DsB;;AAAA;AAAA,QAAS,oFAAT,C;;AAAdJ,oBAAc,6DAJ1B,gEAAU;AACPX,gBAAQ,EAAE,iBADH;AAEPC,gBAAQ,EAAR;AAAA;AAAA;AAFO,OAAV,CAI0B,GAAdU,cAAc,CAAd","file":"pages-cadastro-servico-servico-cad-servico-cad-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>generic-cad</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>{{messages.servico_cad_title}}</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"submitForm()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.servico_cad_field_label_nome}}</ion-label>\\n                    <ion-input formControlName=\\\"nome\\\" #focusInit [attr.maxLength]=\\\"entity.nome_length\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div *ngIf=\\\"isSubmitted && errorControl.nome.errors?.required\\\" class=\\\"error-message\\\">\\n                    {{ messages.field_required }}\\n                </div>\\n\\n            </ion-col>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.servico_cad_field_label_preco}}</ion-label>\\n                    <ion-input formControlName=\\\"preco\\\" (keyup)=\\\"formatPreco($event.target)\\\"\\n                        [attr.maxLength]=\\\"entity.preco_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.servico_cad_field_label_observacao}}</ion-label>\\n                    <ion-input formControlName=\\\"observacao\\\" [attr.maxLength]=\\\"entity.observacao_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n    </form>\\n</ion-content>\";","export abstract class Constants {\r\n    \r\n    static readonly UFS: any[] = [\r\n        { codigo_uf: 27, uf: 'AL', nome: 'Alagoas' },\r\n        { codigo_uf: 12, uf: 'AC', nome: 'Acre' },\r\n        { codigo_uf: 16, uf: 'AP', nome: 'Amapá' },\r\n        { codigo_uf: 13, uf: 'AM', nome: 'Amazonas' },\r\n        { codigo_uf: 29, uf: 'BA', nome: 'Bahia' },\r\n        { codigo_uf: 23, uf: 'CE', nome: 'Ceará' },\r\n        { codigo_uf: 53, uf: 'DF', nome: 'Distrito Federal' },\r\n        { codigo_uf: 32, uf: 'ES', nome: 'Espírito Santo' },\r\n        { codigo_uf: 52, uf: 'GO', nome: 'Goías' },\r\n        { codigo_uf: 21, uf: 'MA', nome: 'Maranhão' },\r\n        { codigo_uf: 51, uf: 'MT', nome: 'Mato Grosso' },\r\n        { codigo_uf: 50, uf: 'MS', nome: 'Mato G. do Sul' },\r\n        { codigo_uf: 31, uf: 'MG', nome: 'Minas Gerais' },\r\n        { codigo_uf: 15, uf: 'PA', nome: 'Pará' },\r\n        { codigo_uf: 25, uf: 'PB', nome: 'Paraíba' },\r\n        { codigo_uf: 41, uf: 'PR', nome: 'Paraná' },\r\n        { codigo_uf: 26, uf: 'PE', nome: 'Pernambuco' },\r\n        { codigo_uf: 22, uf: 'PI', nome: 'Piauí' },\r\n        { codigo_uf: 33, uf: 'RJ', nome: 'Rio de Janeiro' },\r\n        { codigo_uf: 24, uf: 'RN', nome: 'Rio G. do Norte' },\r\n        { codigo_uf: 43, uf: 'RS', nome: 'Rio G. do Sul' },\r\n        { codigo_uf: 11, uf: 'RO', nome: 'Rondônia' },\r\n        { codigo_uf: 14, uf: 'RR', nome: 'Roraíma' },\r\n        { codigo_uf: 42, uf: 'SC', nome: 'Santa Catarina' },\r\n        { codigo_uf: 35, uf: 'SP', nome: 'São Paulo' },\r\n        { codigo_uf: 28, uf: 'SE', nome: 'Sergipe' },\r\n        { codigo_uf: 17, uf: 'TO', nome: 'Tocantins' },\r\n\r\n    ];\r\n\r\n}","\r\nexport class Entity {\r\n\r\n    public id: number;\r\n    public url_base = 'http://api-geatec-com-br.umbler.net';\r\n\r\n    public toObject(json) {\r\n       return Object.assign(json , this);\r\n    }\r\n   \r\n}\r\n","import { Entity } from \"./Entity\";\r\n\r\nexport  class Servico  extends Entity {\r\n \r\n    nome: string;\r\n    preco: string;\r\n    observacao: string;\r\n    criadoEm: string;\r\n    atualizadoEm: string;\r\n\r\n    /**  FIELDS LENGTH's */\r\n    public readonly nome_length = 50;\r\n    public readonly preco_length = 9;\r\n    public readonly observacao_length = 100;\r\n}\r\n","//import { CurrencyPipe } from '@angular/common';\nimport { CurrencyPipe } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { IonInput, NavController, ToastController } from '@ionic/angular';\nimport { Constants } from 'src/app/constants/Constants';\nimport { Messages } from 'src/app/constants/Messages';\nimport { ClienteController } from 'src/app/controller/ClienteController';\nimport { FabricanteController } from 'src/app/controller/FabricanteController';\nimport { LoadController } from 'src/app/controller/LoadController';\nimport { MessageController } from 'src/app/controller/MessageController';\nimport { ProdutoCategoriaController } from 'src/app/controller/ProdutoCategoriaController';\nimport { ServicoController } from 'src/app/controller/ServicoController';\nimport { UnidadeController } from 'src/app/controller/UnidadeController';\nimport { UtilValidators } from 'src/app/utils/UtilValidators';\nimport { UtilApp } from 'src/app/utils/UtilApp';\nimport { ProdutoController } from 'src/app/controller/ProdutoController';\n\n\n@Component({\n    selector: 'app-generic-cad',\n    templateUrl: './generic-cad.page.html'\n})\nexport class GenericCadPage {\n\n    @ViewChild('focusInit', { static: false }) inputFocusInit: IonInput;\n\n    /** DADOS GENERICOS PARA CADASTROS */\n    public form: FormGroup;\n    public entity: any = {};\n    public entityIndex: any;\n    public isSubmitted = false;\n    public isSaveAndBack = false;\n    public postParams: any;\n    public listUf = Constants.UFS;\n    public messages = Messages;\n\n    /**************************************** */\n\n\n    constructor(\n        public unidadeController: UnidadeController,\n        public clienteController: ClienteController,\n        public produtoCategoriaController: ProdutoCategoriaController,\n        public fabricanteController: FabricanteController,\n        public servicoController: ServicoController,\n        public produtoController: ProdutoController,\n        public navCtrl: NavController,\n        public router: Router,\n        public messageController: MessageController,\n        public currencyPipe: CurrencyPipe,\n        private routerActive: ActivatedRoute,\n        private loadingController: LoadController,\n        \n        ) {\n        this.navigateGetParams();\n    }\n\n    public get errorControl() {\n        return this.form.controls;\n    }\n\n    public validForm(): boolean {\n        this.isSubmitted = true;\n        if (!this.form.valid)\n            return false;\n        else {\n            const id = this.entity.id;\n            this.entity = this.form.value;\n            this.entity.id = id;\n            return true;\n        }\n    }\n\n    public isAlterForm(): boolean {\n        return this.entity.id != null;\n    }\n\n    public navigateBack() {\n        this.navCtrl.back();\n    }\n\n    public showLoading() {\n        return this.loadingController.showLoading();\n    }\n\n    public focusInit() {\n        setTimeout(() => this.inputFocusInit.setFocus(), 400);\n    }\n\n\n    navigatePostParams(url: string, entity: any, index: any) {\n        let navigationExtras: NavigationExtras = {\n            state: {\n                postParams: { entity: entity, index: index }\n            }\n        };\n        this.router.navigate(['/' + url], navigationExtras);\n    }\n\n    navigateGetParams(): any {\n        this.routerActive.params.subscribe(params => {\n            let getNav = this.router.getCurrentNavigation();\n            if (getNav.extras.state) {\n                const result = getNav.extras.state.postParams;\n                this.entity = result.entity;\n                this.entityIndex = result.index;\n            }\n        });\n    }\n\n    public navigate(url: string) {\n        this.navCtrl.navigateForward('/' + url);\n    }\n\n\n\n    async hideLoading() {\n        await this.loadingController.hideLoading();\n    }\n\n    removeValidation(nameField: string) {\n        this.form.get(nameField).clearValidators();\n        this.form.get(nameField).updateValueAndValidity();\n    }\n\n    addValidation(nameField: string, validatiors: any) {\n        this.form.get(nameField).setValidators(validatiors);\n        this.form.get(nameField).updateValueAndValidity();\n    }\n\n \n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ServicoCadPage } from './servico-cad.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ServicoCadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ServicoCadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ServicoCadPageRoutingModule } from './servico-cad-routing.module';\n\nimport { ServicoCadPage } from './servico-cad.page';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        ServicoCadPageRoutingModule,\n        ReactiveFormsModule,\n    ],\n    declarations: [ServicoCadPage]\n})\nexport class ServicoCadPageModule { }\n","import { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GenericCadPage } from '../../generic/generic-cad/generic-cad.page';\nimport { IonInput } from '@ionic/angular';\nimport { Servico } from 'src/app/entity/Servico';\nimport { UtilApp } from 'src/app/utils/UtilApp';\nimport { Cliente } from 'src/app/entity/Cliente';\n\n\n@Component({\n    selector: 'app-servico-cad',\n    templateUrl: './servico-cad.page.html'\n})\nexport class ServicoCadPage extends GenericCadPage implements OnInit {\n\n    public precoFormatted: any;\n\n    ngOnInit() {\n        this.createFormFields();\n    }\n\n    ionViewDidEnter() {\n        this.focusInit();\n    }\n\n    createFormFields() {\n        this.form = new FormGroup({\n            nome: new FormControl(this.entity.nome, [Validators.required]),\n            preco: new FormControl(this.entity.preco),\n            observacao: new FormControl(this.entity.observacao),\n        });\n\n        this.initForm();\n    }\n\n\n    initForm() {\n        if (this.isAlterForm()) {\n            this.entityToForm();\n        } else {\n            this.entity = new Servico();\n        }\n    }\n\n    async submitForm() {\n\n        if (this.validForm()) {\n            this.showLoading();\n            this.formToEntity();\n\n            this.servicoController.salvarOuAlterar(this.entity).subscribe(data => {\n                if (!this.entity.id) this.entity.id = data.id;\n                this.messageController.showMessageToast(this.messages.dialogs_register_save);\n                this.navigatePostParams('servico-list', this.entity, this.entityIndex);\n                this.hideLoading();\n            });\n        }\n    }\n\n\n    async formatPreco(event) {\n        event.value = await UtilApp.formatCurrencyToBrlAsync(event.value);\n        this.precoFormatted = event.value;\n    }\n\n    formToEntity() {\n        this.entity.preco = UtilApp.formatCurrencyToDecimal(this.precoFormatted);\n    }\n\n    entityToForm() {\n        this.entity = Object.assign(new Servico(), this.entity);\n        this.entity.preco = UtilApp.formatCurrencyToBrl(this.entity.preco);\n        this.precoFormatted = this.entity.preco;\n    }\n\n}\n"]}