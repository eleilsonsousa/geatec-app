{"version":3,"sources":["webpack:///src/app/pages/cadastro/servico/servico-cad/servico-cad.page.html","webpack:///src/app/entity/Servico.ts","webpack:///src/app/pages/cadastro/servico/servico-cad/servico-cad-routing.module.ts","webpack:///src/app/pages/cadastro/servico/servico-cad/servico-cad.module.ts","webpack:///src/app/pages/cadastro/servico/servico-cad/servico-cad.page.ts"],"names":["Servico","nome_length","preco_length","dobservacao_length","routes","path","component","ServicoCadPageRoutingModule","imports","forChild","exports","ServicoCadPageModule","declarations","ServicoCadPage","createFormFields","hideLoading","showFocus","isAlterCad","entity","Object","assign","precoBRL","formatCurrencyToBRL","preco","initForm","form","nome","required","observacao","validForm","showLoading","formatEntity","servicoController","salvarOuAlterar","subscribe","data","id","messageController","showMessageToast","messages","dialogs_register_save","navigatePostParams","entityIndex","setTimeout","inputNome","setFocus","event","result","value","formatCurrencyToDecimal","selector","template"],"mappings":"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","file":"pages-cadastro-servico-servico-cad-servico-cad-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>{{messages.servico_cad_title}}</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"submitForm()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.servico_cad_field_label_nome}}</ion-label>\\n                    <ion-input formControlName=\\\"nome\\\" #inputNome [attr.maxLength]=\\\"entity.nome_length\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Error messages -->\\n                <div *ngIf=\\\"isSubmitted && errorControl.nome.errors?.required\\\" class=\\\"error-message\\\">\\n                    {{ messages.field_required }}\\n                </div>\\n\\n            </ion-col>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.servico_cad_field_label_preco}}</ion-label>\\n                    <ion-input formControlName=\\\"preco\\\" (keyup)=\\\"formatCurrency($event.target)\\\"\\n                        [attr.maxLength]=\\\"entity.preco_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">{{messages.servico_cad_field_label_observacao}}</ion-label>\\n                    <ion-input formControlName=\\\"observacao\\\" [attr.maxLength]=\\\"entity.observacao_length\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </ion-col>\\n        </ion-row>\\n\\n    </form>\\n</ion-content>\";","import { Entity } from \"./Entity\";\r\n\r\nexport  class Servico  extends Entity {\r\n \r\n    nome: string;\r\n    preco: string;\r\n    observacao: string;\r\n    criadoEm: string;\r\n    atualizadoEm: string;\r\n\r\n    /**  FIELDS LENGTH's */\r\n    public readonly nome_length = 50;\r\n    public readonly preco_length = 9;\r\n    public readonly dobservacao_length = 100;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ServicoCadPage } from './servico-cad.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ServicoCadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ServicoCadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ServicoCadPageRoutingModule } from './servico-cad-routing.module';\n\nimport { ServicoCadPage } from './servico-cad.page';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        ServicoCadPageRoutingModule,\n        ReactiveFormsModule,\n    ],\n    declarations: [ServicoCadPage]\n})\nexport class ServicoCadPageModule { }\n","import { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GenericCadPage } from '../../generic/generic-cad/generic-cad.page';\nimport { IonInput } from '@ionic/angular';\nimport { Servico } from 'src/app/entity/Servico';\nimport { UtilApp } from 'src/app/utils/UtilApp';\nimport { Cliente } from 'src/app/entity/Cliente';\n\n\n@Component({\n    selector: 'app-servico-cad',\n    templateUrl: './servico-cad.page.html'\n})\nexport class ServicoCadPage extends GenericCadPage implements OnInit {\n\n    @ViewChild('inputNome', { static: false }) inputNome: IonInput;\n    precoBRL: string;\n\n    ngOnInit() {\n        this.createFormFields();\n    }\n\n    ionViewWillEnter() {\n        this.hideLoading();\n        //this.initForm();\n    }\n\n    ionViewDidEnter() {\n        this.showFocus();\n    }\n\n    initForm() {\n\n        /** NOVO */\n        if (!this.isAlterCad()) {\n            this.entity = new Servico();\n        } else {\n               /* ALTERAR **/\n            this.entity = Object.assign(new Servico(), this.entity);         \n            this.precoBRL = UtilApp.formatCurrencyToBRL(this.entity.preco);\n            this.entity.preco = this.precoBRL;\n        }\n    }\n\n    createFormFields() {\n\n        this.initForm();\n        this.form = new FormGroup({\n            nome: new FormControl(this.entity.nome, [Validators.required]),\n            preco: new FormControl(this.entity.preco),\n            observacao: new FormControl(this.entity.observacao),\n        });\n    }\n\n    async submitForm() {\n\n        if (this.validForm()) {\n            this.showLoading();\n\n            this.entity = this.formatEntity();\n            this.servicoController.salvarOuAlterar(this.entity).subscribe(data => {\n                if (!this.entity.id) this.entity.id = data.id;\n                this.messageController.showMessageToast(this.messages.dialogs_register_save);\n                this.navigatePostParams('servico-list', this.entity, this.entityIndex);\n                this.hideLoading();\n            });\n        }\n    }\n\n    showFocus() {\n        setTimeout(() => this.inputNome.setFocus(), 400);\n    }\n\n    formatCurrency(event) {\n        const result = UtilApp.formatCurrencyToBRL(event.value); \n        this.precoBRL = result;\n        event.value = result;\n    }\n\n    formatEntity() {\n        this.entity.preco = UtilApp.formatCurrencyToDecimal(this.precoBRL);\n        return this.entity;\n    }\n\n\n\n\n}\n"]}